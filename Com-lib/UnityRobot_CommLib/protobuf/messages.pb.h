// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_messages_2eproto__INCLUDED
#define PROTOBUF_messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "transform.pb.h"
// @@protoc_insertion_point(includes)

namespace Communication {
namespace Messages {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messages_2eproto();
void protobuf_AssignDesc_messages_2eproto();
void protobuf_ShutdownFile_messages_2eproto();

class CustomMessage;
class Error;
class IdentificationResponse;
class SetRotation;
class SetVelocity;
class Shape;
class ShapeUpdateInfo;

// ===================================================================

class SetVelocity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Messages.SetVelocity) */ {
 public:
  SetVelocity();
  virtual ~SetVelocity();

  SetVelocity(const SetVelocity& from);

  inline SetVelocity& operator=(const SetVelocity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetVelocity& default_instance();

  void Swap(SetVelocity* other);

  // implements Message ----------------------------------------------

  inline SetVelocity* New() const { return New(NULL); }

  SetVelocity* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetVelocity& from);
  void MergeFrom(const SetVelocity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetVelocity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Communication.Transform.Vector3 velocity = 1;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 1;
  const ::Communication::Transform::Vector3& velocity() const;
  ::Communication::Transform::Vector3* mutable_velocity();
  ::Communication::Transform::Vector3* release_velocity();
  void set_allocated_velocity(::Communication::Transform::Vector3* velocity);

  // @@protoc_insertion_point(class_scope:Communication.Messages.SetVelocity)
 private:
  inline void set_has_velocity();
  inline void clear_has_velocity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Communication::Transform::Vector3* velocity_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static SetVelocity* default_instance_;
};
// -------------------------------------------------------------------

class SetRotation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Messages.SetRotation) */ {
 public:
  SetRotation();
  virtual ~SetRotation();

  SetRotation(const SetRotation& from);

  inline SetRotation& operator=(const SetRotation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetRotation& default_instance();

  void Swap(SetRotation* other);

  // implements Message ----------------------------------------------

  inline SetRotation* New() const { return New(NULL); }

  SetRotation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetRotation& from);
  void MergeFrom(const SetRotation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetRotation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Communication.Transform.Vector3 rotation = 1;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 1;
  const ::Communication::Transform::Vector3& rotation() const;
  ::Communication::Transform::Vector3* mutable_rotation();
  ::Communication::Transform::Vector3* release_rotation();
  void set_allocated_rotation(::Communication::Transform::Vector3* rotation);

  // @@protoc_insertion_point(class_scope:Communication.Messages.SetRotation)
 private:
  inline void set_has_rotation();
  inline void clear_has_rotation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Communication::Transform::Vector3* rotation_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static SetRotation* default_instance_;
};
// -------------------------------------------------------------------

class IdentificationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Messages.IdentificationResponse) */ {
 public:
  IdentificationResponse();
  virtual ~IdentificationResponse();

  IdentificationResponse(const IdentificationResponse& from);

  inline IdentificationResponse& operator=(const IdentificationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdentificationResponse& default_instance();

  void Swap(IdentificationResponse* other);

  // implements Message ----------------------------------------------

  inline IdentificationResponse* New() const { return New(NULL); }

  IdentificationResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IdentificationResponse& from);
  void MergeFrom(const IdentificationResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IdentificationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string robotType = 1;
  bool has_robottype() const;
  void clear_robottype();
  static const int kRobotTypeFieldNumber = 1;
  const ::std::string& robottype() const;
  void set_robottype(const ::std::string& value);
  void set_robottype(const char* value);
  void set_robottype(const char* value, size_t size);
  ::std::string* mutable_robottype();
  ::std::string* release_robottype();
  void set_allocated_robottype(::std::string* robottype);

  // @@protoc_insertion_point(class_scope:Communication.Messages.IdentificationResponse)
 private:
  inline void set_has_robottype();
  inline void clear_has_robottype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr robottype_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static IdentificationResponse* default_instance_;
};
// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Messages.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:Communication.Messages.Error)
 private:
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static Error* default_instance_;
};
// -------------------------------------------------------------------

class CustomMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Messages.CustomMessage) */ {
 public:
  CustomMessage();
  virtual ~CustomMessage();

  CustomMessage(const CustomMessage& from);

  inline CustomMessage& operator=(const CustomMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomMessage& default_instance();

  void Swap(CustomMessage* other);

  // implements Message ----------------------------------------------

  inline CustomMessage* New() const { return New(NULL); }

  CustomMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CustomMessage& from);
  void MergeFrom(const CustomMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CustomMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Communication.Messages.CustomMessage)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static CustomMessage* default_instance_;
};
// -------------------------------------------------------------------

class ShapeUpdateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Messages.ShapeUpdateInfo) */ {
 public:
  ShapeUpdateInfo();
  virtual ~ShapeUpdateInfo();

  ShapeUpdateInfo(const ShapeUpdateInfo& from);

  inline ShapeUpdateInfo& operator=(const ShapeUpdateInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShapeUpdateInfo& default_instance();

  void Swap(ShapeUpdateInfo* other);

  // implements Message ----------------------------------------------

  inline ShapeUpdateInfo* New() const { return New(NULL); }

  ShapeUpdateInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShapeUpdateInfo& from);
  void MergeFrom(const ShapeUpdateInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShapeUpdateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Communication.Messages.Shape changedShapes = 1;
  int changedshapes_size() const;
  void clear_changedshapes();
  static const int kChangedShapesFieldNumber = 1;
  const ::Communication::Messages::Shape& changedshapes(int index) const;
  ::Communication::Messages::Shape* mutable_changedshapes(int index);
  ::Communication::Messages::Shape* add_changedshapes();
  ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >*
      mutable_changedshapes();
  const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >&
      changedshapes() const;

  // repeated .Communication.Messages.Shape newShapes = 2;
  int newshapes_size() const;
  void clear_newshapes();
  static const int kNewShapesFieldNumber = 2;
  const ::Communication::Messages::Shape& newshapes(int index) const;
  ::Communication::Messages::Shape* mutable_newshapes(int index);
  ::Communication::Messages::Shape* add_newshapes();
  ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >*
      mutable_newshapes();
  const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >&
      newshapes() const;

  // @@protoc_insertion_point(class_scope:Communication.Messages.ShapeUpdateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape > changedshapes_;
  ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape > newshapes_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static ShapeUpdateInfo* default_instance_;
};
// -------------------------------------------------------------------

class Shape : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Messages.Shape) */ {
 public:
  Shape();
  virtual ~Shape();

  Shape(const Shape& from);

  inline Shape& operator=(const Shape& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shape& default_instance();

  void Swap(Shape* other);

  // implements Message ----------------------------------------------

  inline Shape* New() const { return New(NULL); }

  Shape* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Shape& from);
  void MergeFrom(const Shape& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Shape* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // repeated .Communication.Transform.Vector3 vertices = 2;
  int vertices_size() const;
  void clear_vertices();
  static const int kVerticesFieldNumber = 2;
  const ::Communication::Transform::Vector3& vertices(int index) const;
  ::Communication::Transform::Vector3* mutable_vertices(int index);
  ::Communication::Transform::Vector3* add_vertices();
  ::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3 >*
      mutable_vertices();
  const ::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3 >&
      vertices() const;

  // @@protoc_insertion_point(class_scope:Communication.Messages.Shape)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3 > vertices_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static Shape* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SetVelocity

// required .Communication.Transform.Vector3 velocity = 1;
inline bool SetVelocity::has_velocity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetVelocity::set_has_velocity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetVelocity::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetVelocity::clear_velocity() {
  if (velocity_ != NULL) velocity_->::Communication::Transform::Vector3::Clear();
  clear_has_velocity();
}
inline const ::Communication::Transform::Vector3& SetVelocity::velocity() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.SetVelocity.velocity)
  return velocity_ != NULL ? *velocity_ : *default_instance_->velocity_;
}
inline ::Communication::Transform::Vector3* SetVelocity::mutable_velocity() {
  set_has_velocity();
  if (velocity_ == NULL) {
    velocity_ = new ::Communication::Transform::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Messages.SetVelocity.velocity)
  return velocity_;
}
inline ::Communication::Transform::Vector3* SetVelocity::release_velocity() {
  // @@protoc_insertion_point(field_release:Communication.Messages.SetVelocity.velocity)
  clear_has_velocity();
  ::Communication::Transform::Vector3* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
inline void SetVelocity::set_allocated_velocity(::Communication::Transform::Vector3* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    set_has_velocity();
  } else {
    clear_has_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.SetVelocity.velocity)
}

// -------------------------------------------------------------------

// SetRotation

// required .Communication.Transform.Vector3 rotation = 1;
inline bool SetRotation::has_rotation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetRotation::set_has_rotation() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetRotation::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetRotation::clear_rotation() {
  if (rotation_ != NULL) rotation_->::Communication::Transform::Vector3::Clear();
  clear_has_rotation();
}
inline const ::Communication::Transform::Vector3& SetRotation::rotation() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.SetRotation.rotation)
  return rotation_ != NULL ? *rotation_ : *default_instance_->rotation_;
}
inline ::Communication::Transform::Vector3* SetRotation::mutable_rotation() {
  set_has_rotation();
  if (rotation_ == NULL) {
    rotation_ = new ::Communication::Transform::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Messages.SetRotation.rotation)
  return rotation_;
}
inline ::Communication::Transform::Vector3* SetRotation::release_rotation() {
  // @@protoc_insertion_point(field_release:Communication.Messages.SetRotation.rotation)
  clear_has_rotation();
  ::Communication::Transform::Vector3* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline void SetRotation::set_allocated_rotation(::Communication::Transform::Vector3* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    set_has_rotation();
  } else {
    clear_has_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.SetRotation.rotation)
}

// -------------------------------------------------------------------

// IdentificationResponse

// required string robotType = 1;
inline bool IdentificationResponse::has_robottype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IdentificationResponse::set_has_robottype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IdentificationResponse::clear_has_robottype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IdentificationResponse::clear_robottype() {
  robottype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robottype();
}
inline const ::std::string& IdentificationResponse::robottype() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.IdentificationResponse.robotType)
  return robottype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdentificationResponse::set_robottype(const ::std::string& value) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.IdentificationResponse.robotType)
}
inline void IdentificationResponse::set_robottype(const char* value) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.IdentificationResponse.robotType)
}
inline void IdentificationResponse::set_robottype(const char* value, size_t size) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.IdentificationResponse.robotType)
}
inline ::std::string* IdentificationResponse::mutable_robottype() {
  set_has_robottype();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.IdentificationResponse.robotType)
  return robottype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IdentificationResponse::release_robottype() {
  // @@protoc_insertion_point(field_release:Communication.Messages.IdentificationResponse.robotType)
  clear_has_robottype();
  return robottype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IdentificationResponse::set_allocated_robottype(::std::string* robottype) {
  if (robottype != NULL) {
    set_has_robottype();
  } else {
    clear_has_robottype();
  }
  robottype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robottype);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.IdentificationResponse.robotType)
}

// -------------------------------------------------------------------

// Error

// required string message = 1;
inline bool Error::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Error::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Error::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Error.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.Error.message)
}
inline void Error::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.Error.message)
}
inline void Error::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.Error.message)
}
inline ::std::string* Error::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release_message() {
  // @@protoc_insertion_point(field_release:Communication.Messages.Error.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.Error.message)
}

// -------------------------------------------------------------------

// CustomMessage

// required string key = 1;
inline bool CustomMessage::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CustomMessage::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CustomMessage::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CustomMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& CustomMessage::key() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.CustomMessage.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomMessage::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.CustomMessage.key)
}
inline void CustomMessage::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.CustomMessage.key)
}
inline void CustomMessage::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.CustomMessage.key)
}
inline ::std::string* CustomMessage::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.CustomMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomMessage::release_key() {
  // @@protoc_insertion_point(field_release:Communication.Messages.CustomMessage.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.CustomMessage.key)
}

// optional string data = 2;
inline bool CustomMessage::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CustomMessage::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CustomMessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CustomMessage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CustomMessage::data() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.CustomMessage.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomMessage::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.CustomMessage.data)
}
inline void CustomMessage::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.CustomMessage.data)
}
inline void CustomMessage::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.CustomMessage.data)
}
inline ::std::string* CustomMessage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.CustomMessage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CustomMessage::release_data() {
  // @@protoc_insertion_point(field_release:Communication.Messages.CustomMessage.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CustomMessage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.CustomMessage.data)
}

// -------------------------------------------------------------------

// ShapeUpdateInfo

// repeated .Communication.Messages.Shape changedShapes = 1;
inline int ShapeUpdateInfo::changedshapes_size() const {
  return changedshapes_.size();
}
inline void ShapeUpdateInfo::clear_changedshapes() {
  changedshapes_.Clear();
}
inline const ::Communication::Messages::Shape& ShapeUpdateInfo::changedshapes(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_.Get(index);
}
inline ::Communication::Messages::Shape* ShapeUpdateInfo::mutable_changedshapes(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_.Mutable(index);
}
inline ::Communication::Messages::Shape* ShapeUpdateInfo::add_changedshapes() {
  // @@protoc_insertion_point(field_add:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >*
ShapeUpdateInfo::mutable_changedshapes() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return &changedshapes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >&
ShapeUpdateInfo::changedshapes() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_;
}

// repeated .Communication.Messages.Shape newShapes = 2;
inline int ShapeUpdateInfo::newshapes_size() const {
  return newshapes_.size();
}
inline void ShapeUpdateInfo::clear_newshapes() {
  newshapes_.Clear();
}
inline const ::Communication::Messages::Shape& ShapeUpdateInfo::newshapes(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_.Get(index);
}
inline ::Communication::Messages::Shape* ShapeUpdateInfo::mutable_newshapes(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_.Mutable(index);
}
inline ::Communication::Messages::Shape* ShapeUpdateInfo::add_newshapes() {
  // @@protoc_insertion_point(field_add:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >*
ShapeUpdateInfo::mutable_newshapes() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.ShapeUpdateInfo.newShapes)
  return &newshapes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >&
ShapeUpdateInfo::newshapes() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_;
}

// -------------------------------------------------------------------

// Shape

// required int32 id = 1;
inline bool Shape::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Shape::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Shape::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Shape::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Shape::id() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Shape.id)
  return id_;
}
inline void Shape::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Communication.Messages.Shape.id)
}

// repeated .Communication.Transform.Vector3 vertices = 2;
inline int Shape::vertices_size() const {
  return vertices_.size();
}
inline void Shape::clear_vertices() {
  vertices_.Clear();
}
inline const ::Communication::Transform::Vector3& Shape::vertices(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Shape.vertices)
  return vertices_.Get(index);
}
inline ::Communication::Transform::Vector3* Shape::mutable_vertices(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.Shape.vertices)
  return vertices_.Mutable(index);
}
inline ::Communication::Transform::Vector3* Shape::add_vertices() {
  // @@protoc_insertion_point(field_add:Communication.Messages.Shape.vertices)
  return vertices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3 >*
Shape::mutable_vertices() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.Shape.vertices)
  return &vertices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3 >&
Shape::vertices() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.Shape.vertices)
  return vertices_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Communication

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2eproto__INCLUDED
