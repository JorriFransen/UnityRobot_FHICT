// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Communication {
namespace Messages {

namespace {

const ::google::protobuf::Descriptor* SetVelocity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetVelocity_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetRotation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetRotation_reflection_ = NULL;
const ::google::protobuf::Descriptor* IdentificationResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IdentificationResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_reflection_ = NULL;
const ::google::protobuf::Descriptor* CustomMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CustomMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShapeUpdateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShapeUpdateInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Shape_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shape_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messages_2eproto() {
  protobuf_AddDesc_messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages.proto");
  GOOGLE_CHECK(file != NULL);
  SetVelocity_descriptor_ = file->message_type(0);
  static const int SetVelocity_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVelocity, velocity_),
  };
  SetVelocity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetVelocity_descriptor_,
      SetVelocity::default_instance_,
      SetVelocity_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVelocity, _has_bits_[0]),
      -1,
      -1,
      sizeof(SetVelocity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVelocity, _internal_metadata_),
      -1);
  SetRotation_descriptor_ = file->message_type(1);
  static const int SetRotation_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRotation, rotation_),
  };
  SetRotation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetRotation_descriptor_,
      SetRotation::default_instance_,
      SetRotation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRotation, _has_bits_[0]),
      -1,
      -1,
      sizeof(SetRotation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRotation, _internal_metadata_),
      -1);
  IdentificationResponse_descriptor_ = file->message_type(2);
  static const int IdentificationResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationResponse, robottype_),
  };
  IdentificationResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IdentificationResponse_descriptor_,
      IdentificationResponse::default_instance_,
      IdentificationResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationResponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(IdentificationResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationResponse, _internal_metadata_),
      -1);
  Error_descriptor_ = file->message_type(3);
  static const int Error_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, message_),
  };
  Error_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Error_descriptor_,
      Error::default_instance_,
      Error_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _has_bits_[0]),
      -1,
      -1,
      sizeof(Error),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _internal_metadata_),
      -1);
  CustomMessage_descriptor_ = file->message_type(4);
  static const int CustomMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage, data_),
  };
  CustomMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CustomMessage_descriptor_,
      CustomMessage::default_instance_,
      CustomMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(CustomMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage, _internal_metadata_),
      -1);
  ShapeUpdateInfo_descriptor_ = file->message_type(5);
  static const int ShapeUpdateInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo, changedshapes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo, newshapes_),
  };
  ShapeUpdateInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShapeUpdateInfo_descriptor_,
      ShapeUpdateInfo::default_instance_,
      ShapeUpdateInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ShapeUpdateInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo, _internal_metadata_),
      -1);
  Shape_descriptor_ = file->message_type(6);
  static const int Shape_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape, vertices_),
  };
  Shape_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shape_descriptor_,
      Shape::default_instance_,
      Shape_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape, _has_bits_[0]),
      -1,
      -1,
      sizeof(Shape),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetVelocity_descriptor_, &SetVelocity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetRotation_descriptor_, &SetRotation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IdentificationResponse_descriptor_, &IdentificationResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Error_descriptor_, &Error::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CustomMessage_descriptor_, &CustomMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShapeUpdateInfo_descriptor_, &ShapeUpdateInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shape_descriptor_, &Shape::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_2eproto() {
  delete SetVelocity::default_instance_;
  delete SetVelocity_reflection_;
  delete SetRotation::default_instance_;
  delete SetRotation_reflection_;
  delete IdentificationResponse::default_instance_;
  delete IdentificationResponse_reflection_;
  delete Error::default_instance_;
  delete Error_reflection_;
  delete CustomMessage::default_instance_;
  delete CustomMessage_reflection_;
  delete ShapeUpdateInfo::default_instance_;
  delete ShapeUpdateInfo_reflection_;
  delete Shape::default_instance_;
  delete Shape_reflection_;
}

void protobuf_AddDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Communication::Transform::protobuf_AddDesc_transform_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016messages.proto\022\026Communication.Messages"
    "\032\017transform.proto\"A\n\013SetVelocity\0222\n\010velo"
    "city\030\001 \002(\0132 .Communication.Transform.Vec"
    "tor3\"A\n\013SetRotation\0222\n\010rotation\030\001 \002(\0132 ."
    "Communication.Transform.Vector3\"+\n\026Ident"
    "ificationResponse\022\021\n\trobotType\030\001 \002(\t\"\030\n\005"
    "Error\022\017\n\007message\030\001 \002(\t\"*\n\rCustomMessage\022"
    "\013\n\003key\030\001 \002(\t\022\014\n\004data\030\002 \001(\t\"y\n\017ShapeUpdat"
    "eInfo\0224\n\rchangedShapes\030\001 \003(\0132\035.Communica"
    "tion.Messages.Shape\0220\n\tnewShapes\030\002 \003(\0132\035"
    ".Communication.Messages.Shape\"G\n\005Shape\022\n"
    "\n\002id\030\001 \002(\005\0222\n\010vertices\030\002 \003(\0132 .Communica"
    "tion.Transform.Vector3", 502);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  SetVelocity::default_instance_ = new SetVelocity();
  SetRotation::default_instance_ = new SetRotation();
  IdentificationResponse::default_instance_ = new IdentificationResponse();
  Error::default_instance_ = new Error();
  CustomMessage::default_instance_ = new CustomMessage();
  ShapeUpdateInfo::default_instance_ = new ShapeUpdateInfo();
  Shape::default_instance_ = new Shape();
  SetVelocity::default_instance_->InitAsDefaultInstance();
  SetRotation::default_instance_->InitAsDefaultInstance();
  IdentificationResponse::default_instance_->InitAsDefaultInstance();
  Error::default_instance_->InitAsDefaultInstance();
  CustomMessage::default_instance_->InitAsDefaultInstance();
  ShapeUpdateInfo::default_instance_->InitAsDefaultInstance();
  Shape::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetVelocity::kVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetVelocity::SetVelocity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.SetVelocity)
}

void SetVelocity::InitAsDefaultInstance() {
  velocity_ = const_cast< ::Communication::Transform::Vector3*>(&::Communication::Transform::Vector3::default_instance());
}

SetVelocity::SetVelocity(const SetVelocity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.SetVelocity)
}

void SetVelocity::SharedCtor() {
  _cached_size_ = 0;
  velocity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetVelocity::~SetVelocity() {
  // @@protoc_insertion_point(destructor:Communication.Messages.SetVelocity)
  SharedDtor();
}

void SetVelocity::SharedDtor() {
  if (this != default_instance_) {
    delete velocity_;
  }
}

void SetVelocity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetVelocity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetVelocity_descriptor_;
}

const SetVelocity& SetVelocity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

SetVelocity* SetVelocity::default_instance_ = NULL;

SetVelocity* SetVelocity::New(::google::protobuf::Arena* arena) const {
  SetVelocity* n = new SetVelocity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetVelocity::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.SetVelocity)
  if (has_velocity()) {
    if (velocity_ != NULL) velocity_->::Communication::Transform::Vector3::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SetVelocity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.SetVelocity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Communication.Transform.Vector3 velocity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.SetVelocity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.SetVelocity)
  return false;
#undef DO_
}

void SetVelocity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.SetVelocity)
  // required .Communication.Transform.Vector3 velocity = 1;
  if (has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->velocity_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.SetVelocity)
}

::google::protobuf::uint8* SetVelocity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.SetVelocity)
  // required .Communication.Transform.Vector3 velocity = 1;
  if (has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->velocity_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.SetVelocity)
  return target;
}

int SetVelocity::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.SetVelocity)
  int total_size = 0;

  // required .Communication.Transform.Vector3 velocity = 1;
  if (has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->velocity_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetVelocity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.SetVelocity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetVelocity* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetVelocity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.SetVelocity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.SetVelocity)
    MergeFrom(*source);
  }
}

void SetVelocity::MergeFrom(const SetVelocity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.SetVelocity)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_velocity()) {
      mutable_velocity()->::Communication::Transform::Vector3::MergeFrom(from.velocity());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SetVelocity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.SetVelocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetVelocity::CopyFrom(const SetVelocity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.SetVelocity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVelocity::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_velocity()) {
    if (!this->velocity_->IsInitialized()) return false;
  }
  return true;
}

void SetVelocity::Swap(SetVelocity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetVelocity::InternalSwap(SetVelocity* other) {
  std::swap(velocity_, other->velocity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetVelocity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetVelocity_descriptor_;
  metadata.reflection = SetVelocity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetVelocity

// required .Communication.Transform.Vector3 velocity = 1;
bool SetVelocity::has_velocity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetVelocity::set_has_velocity() {
  _has_bits_[0] |= 0x00000001u;
}
void SetVelocity::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetVelocity::clear_velocity() {
  if (velocity_ != NULL) velocity_->::Communication::Transform::Vector3::Clear();
  clear_has_velocity();
}
const ::Communication::Transform::Vector3& SetVelocity::velocity() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.SetVelocity.velocity)
  return velocity_ != NULL ? *velocity_ : *default_instance_->velocity_;
}
::Communication::Transform::Vector3* SetVelocity::mutable_velocity() {
  set_has_velocity();
  if (velocity_ == NULL) {
    velocity_ = new ::Communication::Transform::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Messages.SetVelocity.velocity)
  return velocity_;
}
::Communication::Transform::Vector3* SetVelocity::release_velocity() {
  // @@protoc_insertion_point(field_release:Communication.Messages.SetVelocity.velocity)
  clear_has_velocity();
  ::Communication::Transform::Vector3* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
void SetVelocity::set_allocated_velocity(::Communication::Transform::Vector3* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    set_has_velocity();
  } else {
    clear_has_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.SetVelocity.velocity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRotation::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRotation::SetRotation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.SetRotation)
}

void SetRotation::InitAsDefaultInstance() {
  rotation_ = const_cast< ::Communication::Transform::Vector3*>(&::Communication::Transform::Vector3::default_instance());
}

SetRotation::SetRotation(const SetRotation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.SetRotation)
}

void SetRotation::SharedCtor() {
  _cached_size_ = 0;
  rotation_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetRotation::~SetRotation() {
  // @@protoc_insertion_point(destructor:Communication.Messages.SetRotation)
  SharedDtor();
}

void SetRotation::SharedDtor() {
  if (this != default_instance_) {
    delete rotation_;
  }
}

void SetRotation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetRotation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetRotation_descriptor_;
}

const SetRotation& SetRotation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

SetRotation* SetRotation::default_instance_ = NULL;

SetRotation* SetRotation::New(::google::protobuf::Arena* arena) const {
  SetRotation* n = new SetRotation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetRotation::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.SetRotation)
  if (has_rotation()) {
    if (rotation_ != NULL) rotation_->::Communication::Transform::Vector3::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SetRotation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.SetRotation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Communication.Transform.Vector3 rotation = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.SetRotation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.SetRotation)
  return false;
#undef DO_
}

void SetRotation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.SetRotation)
  // required .Communication.Transform.Vector3 rotation = 1;
  if (has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->rotation_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.SetRotation)
}

::google::protobuf::uint8* SetRotation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.SetRotation)
  // required .Communication.Transform.Vector3 rotation = 1;
  if (has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->rotation_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.SetRotation)
  return target;
}

int SetRotation::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.SetRotation)
  int total_size = 0;

  // required .Communication.Transform.Vector3 rotation = 1;
  if (has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rotation_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetRotation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.SetRotation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetRotation* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetRotation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.SetRotation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.SetRotation)
    MergeFrom(*source);
  }
}

void SetRotation::MergeFrom(const SetRotation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.SetRotation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rotation()) {
      mutable_rotation()->::Communication::Transform::Vector3::MergeFrom(from.rotation());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SetRotation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.SetRotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRotation::CopyFrom(const SetRotation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.SetRotation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRotation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_rotation()) {
    if (!this->rotation_->IsInitialized()) return false;
  }
  return true;
}

void SetRotation::Swap(SetRotation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRotation::InternalSwap(SetRotation* other) {
  std::swap(rotation_, other->rotation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetRotation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetRotation_descriptor_;
  metadata.reflection = SetRotation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetRotation

// required .Communication.Transform.Vector3 rotation = 1;
bool SetRotation::has_rotation() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetRotation::set_has_rotation() {
  _has_bits_[0] |= 0x00000001u;
}
void SetRotation::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetRotation::clear_rotation() {
  if (rotation_ != NULL) rotation_->::Communication::Transform::Vector3::Clear();
  clear_has_rotation();
}
const ::Communication::Transform::Vector3& SetRotation::rotation() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.SetRotation.rotation)
  return rotation_ != NULL ? *rotation_ : *default_instance_->rotation_;
}
::Communication::Transform::Vector3* SetRotation::mutable_rotation() {
  set_has_rotation();
  if (rotation_ == NULL) {
    rotation_ = new ::Communication::Transform::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Messages.SetRotation.rotation)
  return rotation_;
}
::Communication::Transform::Vector3* SetRotation::release_rotation() {
  // @@protoc_insertion_point(field_release:Communication.Messages.SetRotation.rotation)
  clear_has_rotation();
  ::Communication::Transform::Vector3* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
void SetRotation::set_allocated_rotation(::Communication::Transform::Vector3* rotation) {
  delete rotation_;
  rotation_ = rotation;
  if (rotation) {
    set_has_rotation();
  } else {
    clear_has_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.SetRotation.rotation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentificationResponse::kRobotTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentificationResponse::IdentificationResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.IdentificationResponse)
}

void IdentificationResponse::InitAsDefaultInstance() {
}

IdentificationResponse::IdentificationResponse(const IdentificationResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.IdentificationResponse)
}

void IdentificationResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  robottype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IdentificationResponse::~IdentificationResponse() {
  // @@protoc_insertion_point(destructor:Communication.Messages.IdentificationResponse)
  SharedDtor();
}

void IdentificationResponse::SharedDtor() {
  robottype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void IdentificationResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdentificationResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IdentificationResponse_descriptor_;
}

const IdentificationResponse& IdentificationResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

IdentificationResponse* IdentificationResponse::default_instance_ = NULL;

IdentificationResponse* IdentificationResponse::New(::google::protobuf::Arena* arena) const {
  IdentificationResponse* n = new IdentificationResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdentificationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.IdentificationResponse)
  if (has_robottype()) {
    robottype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool IdentificationResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.IdentificationResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string robotType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robottype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->robottype().data(), this->robottype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.IdentificationResponse.robotType");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.IdentificationResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.IdentificationResponse)
  return false;
#undef DO_
}

void IdentificationResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.IdentificationResponse)
  // required string robotType = 1;
  if (has_robottype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robottype().data(), this->robottype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.IdentificationResponse.robotType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robottype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.IdentificationResponse)
}

::google::protobuf::uint8* IdentificationResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.IdentificationResponse)
  // required string robotType = 1;
  if (has_robottype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robottype().data(), this->robottype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.IdentificationResponse.robotType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robottype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.IdentificationResponse)
  return target;
}

int IdentificationResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.IdentificationResponse)
  int total_size = 0;

  // required string robotType = 1;
  if (has_robottype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robottype());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdentificationResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.IdentificationResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IdentificationResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentificationResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.IdentificationResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.IdentificationResponse)
    MergeFrom(*source);
  }
}

void IdentificationResponse::MergeFrom(const IdentificationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.IdentificationResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_robottype()) {
      set_has_robottype();
      robottype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robottype_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void IdentificationResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.IdentificationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentificationResponse::CopyFrom(const IdentificationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.IdentificationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentificationResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void IdentificationResponse::Swap(IdentificationResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentificationResponse::InternalSwap(IdentificationResponse* other) {
  robottype_.Swap(&other->robottype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdentificationResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IdentificationResponse_descriptor_;
  metadata.reflection = IdentificationResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdentificationResponse

// required string robotType = 1;
bool IdentificationResponse::has_robottype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IdentificationResponse::set_has_robottype() {
  _has_bits_[0] |= 0x00000001u;
}
void IdentificationResponse::clear_has_robottype() {
  _has_bits_[0] &= ~0x00000001u;
}
void IdentificationResponse::clear_robottype() {
  robottype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robottype();
}
 const ::std::string& IdentificationResponse::robottype() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.IdentificationResponse.robotType)
  return robottype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IdentificationResponse::set_robottype(const ::std::string& value) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.IdentificationResponse.robotType)
}
 void IdentificationResponse::set_robottype(const char* value) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.IdentificationResponse.robotType)
}
 void IdentificationResponse::set_robottype(const char* value, size_t size) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.IdentificationResponse.robotType)
}
 ::std::string* IdentificationResponse::mutable_robottype() {
  set_has_robottype();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.IdentificationResponse.robotType)
  return robottype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IdentificationResponse::release_robottype() {
  // @@protoc_insertion_point(field_release:Communication.Messages.IdentificationResponse.robotType)
  clear_has_robottype();
  return robottype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IdentificationResponse::set_allocated_robottype(::std::string* robottype) {
  if (robottype != NULL) {
    set_has_robottype();
  } else {
    clear_has_robottype();
  }
  robottype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robottype);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.IdentificationResponse.robotType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.Error)
}

void Error::InitAsDefaultInstance() {
}

Error::Error(const Error& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.Error)
}

void Error::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:Communication.Messages.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_descriptor_;
}

const Error& Error::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Error* Error::default_instance_ = NULL;

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.Error)
  if (has_message()) {
    message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.Error.message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.Error)
  // required string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.Error)
  // required string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.Error)
  return target;
}

int Error::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.Error)
  int total_size = 0;

  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Error* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  message_.Swap(&other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error_descriptor_;
  metadata.reflection = Error_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// required string message = 1;
bool Error::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Error::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void Error::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
 const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Error.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.Error.message)
}
 void Error::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.Error.message)
}
 void Error::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.Error.message)
}
 ::std::string* Error::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Error::release_message() {
  // @@protoc_insertion_point(field_release:Communication.Messages.Error.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.Error.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomMessage::kKeyFieldNumber;
const int CustomMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomMessage::CustomMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.CustomMessage)
}

void CustomMessage::InitAsDefaultInstance() {
}

CustomMessage::CustomMessage(const CustomMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.CustomMessage)
}

void CustomMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CustomMessage::~CustomMessage() {
  // @@protoc_insertion_point(destructor:Communication.Messages.CustomMessage)
  SharedDtor();
}

void CustomMessage::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CustomMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomMessage_descriptor_;
}

const CustomMessage& CustomMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

CustomMessage* CustomMessage::default_instance_ = NULL;

CustomMessage* CustomMessage::New(::google::protobuf::Arena* arena) const {
  CustomMessage* n = new CustomMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.CustomMessage)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CustomMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.CustomMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.CustomMessage.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional string data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.CustomMessage.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.CustomMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.CustomMessage)
  return false;
#undef DO_
}

void CustomMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.CustomMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.CustomMessage)
}

::google::protobuf::uint8* CustomMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.CustomMessage)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.CustomMessage)
  return target;
}

int CustomMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.CustomMessage)
  int total_size = 0;

  // required string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }
  // optional string data = 2;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.CustomMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CustomMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.CustomMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.CustomMessage)
    MergeFrom(*source);
  }
}

void CustomMessage::MergeFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.CustomMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CustomMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomMessage::CopyFrom(const CustomMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.CustomMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CustomMessage::Swap(CustomMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomMessage::InternalSwap(CustomMessage* other) {
  key_.Swap(&other->key_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CustomMessage_descriptor_;
  metadata.reflection = CustomMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomMessage

// required string key = 1;
bool CustomMessage::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CustomMessage::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CustomMessage::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CustomMessage::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& CustomMessage::key() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.CustomMessage.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.CustomMessage.key)
}
 void CustomMessage::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.CustomMessage.key)
}
 void CustomMessage::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.CustomMessage.key)
}
 ::std::string* CustomMessage::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.CustomMessage.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CustomMessage::release_key() {
  // @@protoc_insertion_point(field_release:Communication.Messages.CustomMessage.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.CustomMessage.key)
}

// optional string data = 2;
bool CustomMessage::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CustomMessage::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void CustomMessage::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void CustomMessage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& CustomMessage::data() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.CustomMessage.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.CustomMessage.data)
}
 void CustomMessage::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.CustomMessage.data)
}
 void CustomMessage::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.CustomMessage.data)
}
 ::std::string* CustomMessage::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.CustomMessage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CustomMessage::release_data() {
  // @@protoc_insertion_point(field_release:Communication.Messages.CustomMessage.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.CustomMessage.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShapeUpdateInfo::kChangedShapesFieldNumber;
const int ShapeUpdateInfo::kNewShapesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShapeUpdateInfo::ShapeUpdateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.ShapeUpdateInfo)
}

void ShapeUpdateInfo::InitAsDefaultInstance() {
}

ShapeUpdateInfo::ShapeUpdateInfo(const ShapeUpdateInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.ShapeUpdateInfo)
}

void ShapeUpdateInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShapeUpdateInfo::~ShapeUpdateInfo() {
  // @@protoc_insertion_point(destructor:Communication.Messages.ShapeUpdateInfo)
  SharedDtor();
}

void ShapeUpdateInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShapeUpdateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShapeUpdateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShapeUpdateInfo_descriptor_;
}

const ShapeUpdateInfo& ShapeUpdateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

ShapeUpdateInfo* ShapeUpdateInfo::default_instance_ = NULL;

ShapeUpdateInfo* ShapeUpdateInfo::New(::google::protobuf::Arena* arena) const {
  ShapeUpdateInfo* n = new ShapeUpdateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShapeUpdateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.ShapeUpdateInfo)
  changedshapes_.Clear();
  newshapes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ShapeUpdateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.ShapeUpdateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Communication.Messages.Shape changedShapes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_changedShapes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_changedshapes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_changedShapes;
        if (input->ExpectTag(18)) goto parse_loop_newShapes;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Communication.Messages.Shape newShapes = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_newShapes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_newshapes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_newShapes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.ShapeUpdateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.ShapeUpdateInfo)
  return false;
#undef DO_
}

void ShapeUpdateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.ShapeUpdateInfo)
  // repeated .Communication.Messages.Shape changedShapes = 1;
  for (unsigned int i = 0, n = this->changedshapes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->changedshapes(i), output);
  }

  // repeated .Communication.Messages.Shape newShapes = 2;
  for (unsigned int i = 0, n = this->newshapes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->newshapes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.ShapeUpdateInfo)
}

::google::protobuf::uint8* ShapeUpdateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.ShapeUpdateInfo)
  // repeated .Communication.Messages.Shape changedShapes = 1;
  for (unsigned int i = 0, n = this->changedshapes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->changedshapes(i), false, target);
  }

  // repeated .Communication.Messages.Shape newShapes = 2;
  for (unsigned int i = 0, n = this->newshapes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->newshapes(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.ShapeUpdateInfo)
  return target;
}

int ShapeUpdateInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.ShapeUpdateInfo)
  int total_size = 0;

  // repeated .Communication.Messages.Shape changedShapes = 1;
  total_size += 1 * this->changedshapes_size();
  for (int i = 0; i < this->changedshapes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->changedshapes(i));
  }

  // repeated .Communication.Messages.Shape newShapes = 2;
  total_size += 1 * this->newshapes_size();
  for (int i = 0; i < this->newshapes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newshapes(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShapeUpdateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.ShapeUpdateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ShapeUpdateInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ShapeUpdateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.ShapeUpdateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.ShapeUpdateInfo)
    MergeFrom(*source);
  }
}

void ShapeUpdateInfo::MergeFrom(const ShapeUpdateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.ShapeUpdateInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  changedshapes_.MergeFrom(from.changedshapes_);
  newshapes_.MergeFrom(from.newshapes_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ShapeUpdateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.ShapeUpdateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShapeUpdateInfo::CopyFrom(const ShapeUpdateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.ShapeUpdateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeUpdateInfo::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->changedshapes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->newshapes())) return false;
  return true;
}

void ShapeUpdateInfo::Swap(ShapeUpdateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShapeUpdateInfo::InternalSwap(ShapeUpdateInfo* other) {
  changedshapes_.UnsafeArenaSwap(&other->changedshapes_);
  newshapes_.UnsafeArenaSwap(&other->newshapes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShapeUpdateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShapeUpdateInfo_descriptor_;
  metadata.reflection = ShapeUpdateInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShapeUpdateInfo

// repeated .Communication.Messages.Shape changedShapes = 1;
int ShapeUpdateInfo::changedshapes_size() const {
  return changedshapes_.size();
}
void ShapeUpdateInfo::clear_changedshapes() {
  changedshapes_.Clear();
}
const ::Communication::Messages::Shape& ShapeUpdateInfo::changedshapes(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_.Get(index);
}
::Communication::Messages::Shape* ShapeUpdateInfo::mutable_changedshapes(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_.Mutable(index);
}
::Communication::Messages::Shape* ShapeUpdateInfo::add_changedshapes() {
  // @@protoc_insertion_point(field_add:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_.Add();
}
::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >*
ShapeUpdateInfo::mutable_changedshapes() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return &changedshapes_;
}
const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >&
ShapeUpdateInfo::changedshapes() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.ShapeUpdateInfo.changedShapes)
  return changedshapes_;
}

// repeated .Communication.Messages.Shape newShapes = 2;
int ShapeUpdateInfo::newshapes_size() const {
  return newshapes_.size();
}
void ShapeUpdateInfo::clear_newshapes() {
  newshapes_.Clear();
}
const ::Communication::Messages::Shape& ShapeUpdateInfo::newshapes(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_.Get(index);
}
::Communication::Messages::Shape* ShapeUpdateInfo::mutable_newshapes(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_.Mutable(index);
}
::Communication::Messages::Shape* ShapeUpdateInfo::add_newshapes() {
  // @@protoc_insertion_point(field_add:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_.Add();
}
::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >*
ShapeUpdateInfo::mutable_newshapes() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.ShapeUpdateInfo.newShapes)
  return &newshapes_;
}
const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape >&
ShapeUpdateInfo::newshapes() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.ShapeUpdateInfo.newShapes)
  return newshapes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shape::kIdFieldNumber;
const int Shape::kVerticesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shape::Shape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.Shape)
}

void Shape::InitAsDefaultInstance() {
}

Shape::Shape(const Shape& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.Shape)
}

void Shape::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Shape::~Shape() {
  // @@protoc_insertion_point(destructor:Communication.Messages.Shape)
  SharedDtor();
}

void Shape::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Shape::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shape::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shape_descriptor_;
}

const Shape& Shape::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Shape* Shape::default_instance_ = NULL;

Shape* Shape::New(::google::protobuf::Arena* arena) const {
  Shape* n = new Shape;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shape::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.Shape)
  id_ = 0;
  vertices_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Shape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.Shape)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vertices;
        break;
      }

      // repeated .Communication.Transform.Vector3 vertices = 2;
      case 2: {
        if (tag == 18) {
         parse_vertices:
          DO_(input->IncrementRecursionDepth());
         parse_loop_vertices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vertices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_vertices;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.Shape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.Shape)
  return false;
#undef DO_
}

void Shape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.Shape)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .Communication.Transform.Vector3 vertices = 2;
  for (unsigned int i = 0, n = this->vertices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vertices(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.Shape)
}

::google::protobuf::uint8* Shape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.Shape)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .Communication.Transform.Vector3 vertices = 2;
  for (unsigned int i = 0, n = this->vertices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->vertices(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.Shape)
  return target;
}

int Shape::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.Shape)
  int total_size = 0;

  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // repeated .Communication.Transform.Vector3 vertices = 2;
  total_size += 1 * this->vertices_size();
  for (int i = 0; i < this->vertices_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vertices(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.Shape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Shape* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Shape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.Shape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.Shape)
    MergeFrom(*source);
  }
}

void Shape::MergeFrom(const Shape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.Shape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  vertices_.MergeFrom(from.vertices_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Shape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shape::CopyFrom(const Shape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shape::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->vertices())) return false;
  return true;
}

void Shape::Swap(Shape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shape::InternalSwap(Shape* other) {
  std::swap(id_, other->id_);
  vertices_.UnsafeArenaSwap(&other->vertices_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shape::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shape_descriptor_;
  metadata.reflection = Shape_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shape

// required int32 id = 1;
bool Shape::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Shape::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Shape::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Shape::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 Shape::id() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Shape.id)
  return id_;
}
 void Shape::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Communication.Messages.Shape.id)
}

// repeated .Communication.Transform.Vector3 vertices = 2;
int Shape::vertices_size() const {
  return vertices_.size();
}
void Shape::clear_vertices() {
  vertices_.Clear();
}
const ::Communication::Transform::Vector3& Shape::vertices(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Shape.vertices)
  return vertices_.Get(index);
}
::Communication::Transform::Vector3* Shape::mutable_vertices(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.Shape.vertices)
  return vertices_.Mutable(index);
}
::Communication::Transform::Vector3* Shape::add_vertices() {
  // @@protoc_insertion_point(field_add:Communication.Messages.Shape.vertices)
  return vertices_.Add();
}
::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3 >*
Shape::mutable_vertices() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.Shape.vertices)
  return &vertices_;
}
const ::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3 >&
Shape::vertices() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.Shape.vertices)
  return vertices_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Communication

// @@protoc_insertion_point(global_scope)
