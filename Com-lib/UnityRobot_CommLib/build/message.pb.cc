// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Communication {

namespace {

const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageTarget__descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType__descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  Message_descriptor_ = file->message_type(0);
  static const int Message_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, messagetarget_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, messagetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, robotvelocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, identificationresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, custommessage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, shapeupdateinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, stringdata_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::internal_default_instance(),
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_),
      -1,
      -1,
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_));
  MessageTarget__descriptor_ = file->enum_type(0);
  MessageType__descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, Message::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  Message_default_instance_.Shutdown();
  delete Message_reflection_;
}

void protobuf_InitDefaults_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Communication::Messages::protobuf_InitDefaults_messages_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  Message_default_instance_.DefaultConstruct();
  Message_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_message_2eproto_once_);
void protobuf_InitDefaults_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_message_2eproto_once_,
                 &protobuf_InitDefaults_message_2eproto_impl);
}
void protobuf_AddDesc_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_message_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\rCommunication\032\016messages"
    ".proto\"\320\003\n\007Message\022\n\n\002id\030\001 \002(\005\0224\n\rmessag"
    "eTarget\030\002 \002(\0162\035.Communication.MessageTar"
    "get_\0220\n\013messageType\030\003 \002(\0162\033.Communicatio"
    "n.MessageType_\022;\n\rrobotVelocity\030\004 \001(\0132$."
    "Communication.Messages.SetVelocity_\022O\n\026i"
    "dentificationResponse\030\005 \001(\0132/.Communicat"
    "ion.Messages.IdentificationResponse_\022-\n\005"
    "error\030\006 \001(\0132\036.Communication.Messages.Err"
    "or_\022=\n\rcustomMessage\030\007 \001(\0132&.Communicati"
    "on.Messages.CustomMessage_\022A\n\017shapeUpdat"
    "eInfo\030\010 \001(\0132(.Communication.Messages.Sha"
    "peUpdateInfo_\022\022\n\nstringData\030\t \001(\t*2\n\016Mes"
    "sageTarget_\022\t\n\005Robot\020\000\022\t\n\005Unity\020\001\022\n\n\006Vis"
    "ion\020\002*\231\001\n\014MessageType_\022\031\n\025Identification"
    "Request\020\000\022\022\n\016VelocityChange\020\001\022\014\n\010Indicat"
    "e\020\002\022\032\n\026IdentificationResponse\020\003\022\014\n\010LogEr"
    "ror\020\004\022\021\n\rCustomMessage\020\005\022\017\n\013ShapeUpdate\020"
    "\006", 721);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::Communication::Messages::protobuf_AddDesc_messages_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_message_2eproto_once_);
void protobuf_AddDesc_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_message_2eproto_once_,
                 &protobuf_AddDesc_message_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;
const ::google::protobuf::EnumDescriptor* MessageTarget__descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageTarget__descriptor_;
}
bool MessageTarget__IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType__descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType__descriptor_;
}
bool MessageType__IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kIdFieldNumber;
const int Message::kMessageTargetFieldNumber;
const int Message::kMessageTypeFieldNumber;
const int Message::kRobotVelocityFieldNumber;
const int Message::kIdentificationResponseFieldNumber;
const int Message::kErrorFieldNumber;
const int Message::kCustomMessageFieldNumber;
const int Message::kShapeUpdateInfoFieldNumber;
const int Message::kStringDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Message)
}

void Message::InitAsDefaultInstance() {
  robotvelocity_ = const_cast< ::Communication::Messages::SetVelocity_*>(
      ::Communication::Messages::SetVelocity_::internal_default_instance());
  identificationresponse_ = const_cast< ::Communication::Messages::IdentificationResponse_*>(
      ::Communication::Messages::IdentificationResponse_::internal_default_instance());
  error_ = const_cast< ::Communication::Messages::Error_*>(
      ::Communication::Messages::Error_::internal_default_instance());
  custommessage_ = const_cast< ::Communication::Messages::CustomMessage_*>(
      ::Communication::Messages::CustomMessage_::internal_default_instance());
  shapeupdateinfo_ = const_cast< ::Communication::Messages::ShapeUpdateInfo_*>(
      ::Communication::Messages::ShapeUpdateInfo_::internal_default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Message)
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  stringdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robotvelocity_ = NULL;
  identificationresponse_ = NULL;
  error_ = NULL;
  custommessage_ = NULL;
  shapeupdateinfo_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&messagetype_) -
    reinterpret_cast<char*>(&id_) + sizeof(messagetype_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:Communication.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  stringdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Message_default_instance_.get()) {
    delete robotvelocity_;
    delete identificationresponse_;
    delete error_;
    delete custommessage_;
    delete shapeupdateinfo_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Message)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Message, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Message*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(id_, messagetype_);
    if (has_robotvelocity()) {
      if (robotvelocity_ != NULL) robotvelocity_->::Communication::Messages::SetVelocity_::Clear();
    }
    if (has_identificationresponse()) {
      if (identificationresponse_ != NULL) identificationresponse_->::Communication::Messages::IdentificationResponse_::Clear();
    }
    if (has_error()) {
      if (error_ != NULL) error_->::Communication::Messages::Error_::Clear();
    }
    if (has_custommessage()) {
      if (custommessage_ != NULL) custommessage_->::Communication::Messages::CustomMessage_::Clear();
    }
    if (has_shapeupdateinfo()) {
      if (shapeupdateinfo_ != NULL) shapeupdateinfo_->::Communication::Messages::ShapeUpdateInfo_::Clear();
    }
  }
  if (has_stringdata()) {
    stringdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_messageTarget;
        break;
      }

      // required .Communication.MessageTarget_ messageTarget = 2;
      case 2: {
        if (tag == 16) {
         parse_messageTarget:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Communication::MessageTarget__IsValid(value)) {
            set_messagetarget(static_cast< ::Communication::MessageTarget_ >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_messageType;
        break;
      }

      // required .Communication.MessageType_ messageType = 3;
      case 3: {
        if (tag == 24) {
         parse_messageType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Communication::MessageType__IsValid(value)) {
            set_messagetype(static_cast< ::Communication::MessageType_ >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_robotVelocity;
        break;
      }

      // optional .Communication.Messages.SetVelocity_ robotVelocity = 4;
      case 4: {
        if (tag == 34) {
         parse_robotVelocity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_robotvelocity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_identificationResponse;
        break;
      }

      // optional .Communication.Messages.IdentificationResponse_ identificationResponse = 5;
      case 5: {
        if (tag == 42) {
         parse_identificationResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_identificationresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_error;
        break;
      }

      // optional .Communication.Messages.Error_ error = 6;
      case 6: {
        if (tag == 50) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_customMessage;
        break;
      }

      // optional .Communication.Messages.CustomMessage_ customMessage = 7;
      case 7: {
        if (tag == 58) {
         parse_customMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_custommessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_shapeUpdateInfo;
        break;
      }

      // optional .Communication.Messages.ShapeUpdateInfo_ shapeUpdateInfo = 8;
      case 8: {
        if (tag == 66) {
         parse_shapeUpdateInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shapeupdateinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_stringData;
        break;
      }

      // optional string stringData = 9;
      case 9: {
        if (tag == 74) {
         parse_stringData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stringdata().data(), this->stringdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Message.stringData");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Message)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .Communication.MessageTarget_ messageTarget = 2;
  if (has_messagetarget()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->messagetarget(), output);
  }

  // required .Communication.MessageType_ messageType = 3;
  if (has_messagetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->messagetype(), output);
  }

  // optional .Communication.Messages.SetVelocity_ robotVelocity = 4;
  if (has_robotvelocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->robotvelocity_, output);
  }

  // optional .Communication.Messages.IdentificationResponse_ identificationResponse = 5;
  if (has_identificationresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->identificationresponse_, output);
  }

  // optional .Communication.Messages.Error_ error = 6;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->error_, output);
  }

  // optional .Communication.Messages.CustomMessage_ customMessage = 7;
  if (has_custommessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->custommessage_, output);
  }

  // optional .Communication.Messages.ShapeUpdateInfo_ shapeUpdateInfo = 8;
  if (has_shapeupdateinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->shapeupdateinfo_, output);
  }

  // optional string stringData = 9;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Message.stringData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->stringdata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Message)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .Communication.MessageTarget_ messageTarget = 2;
  if (has_messagetarget()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->messagetarget(), target);
  }

  // required .Communication.MessageType_ messageType = 3;
  if (has_messagetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->messagetype(), target);
  }

  // optional .Communication.Messages.SetVelocity_ robotVelocity = 4;
  if (has_robotvelocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->robotvelocity_, false, target);
  }

  // optional .Communication.Messages.IdentificationResponse_ identificationResponse = 5;
  if (has_identificationresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->identificationresponse_, false, target);
  }

  // optional .Communication.Messages.Error_ error = 6;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->error_, false, target);
  }

  // optional .Communication.Messages.CustomMessage_ customMessage = 7;
  if (has_custommessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->custommessage_, false, target);
  }

  // optional .Communication.Messages.ShapeUpdateInfo_ shapeUpdateInfo = 8;
  if (has_shapeupdateinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->shapeupdateinfo_, false, target);
  }

  // optional string stringData = 9;
  if (has_stringdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringdata().data(), this->stringdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Message.stringData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->stringdata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Message)
  return target;
}

size_t Message::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Communication.Message)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_messagetarget()) {
    // required .Communication.MessageTarget_ messageTarget = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetarget());
  }

  if (has_messagetype()) {
    // required .Communication.MessageType_ messageType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
  }

  return total_size;
}
size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Message)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required .Communication.MessageTarget_ messageTarget = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetarget());

    // required .Communication.MessageType_ messageType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 248u) {
    // optional .Communication.Messages.SetVelocity_ robotVelocity = 4;
    if (has_robotvelocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->robotvelocity_);
    }

    // optional .Communication.Messages.IdentificationResponse_ identificationResponse = 5;
    if (has_identificationresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->identificationresponse_);
    }

    // optional .Communication.Messages.Error_ error = 6;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->error_);
    }

    // optional .Communication.Messages.CustomMessage_ customMessage = 7;
    if (has_custommessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->custommessage_);
    }

    // optional .Communication.Messages.ShapeUpdateInfo_ shapeUpdateInfo = 8;
    if (has_shapeupdateinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->shapeupdateinfo_);
    }

  }
  // optional string stringData = 9;
  if (has_stringdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stringdata());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Message)
    UnsafeMergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Message::UnsafeMergeFrom(const Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_messagetarget()) {
      set_messagetarget(from.messagetarget());
    }
    if (from.has_messagetype()) {
      set_messagetype(from.messagetype());
    }
    if (from.has_robotvelocity()) {
      mutable_robotvelocity()->::Communication::Messages::SetVelocity_::MergeFrom(from.robotvelocity());
    }
    if (from.has_identificationresponse()) {
      mutable_identificationresponse()->::Communication::Messages::IdentificationResponse_::MergeFrom(from.identificationresponse());
    }
    if (from.has_error()) {
      mutable_error()->::Communication::Messages::Error_::MergeFrom(from.error());
    }
    if (from.has_custommessage()) {
      mutable_custommessage()->::Communication::Messages::CustomMessage_::MergeFrom(from.custommessage());
    }
    if (from.has_shapeupdateinfo()) {
      mutable_shapeupdateinfo()->::Communication::Messages::ShapeUpdateInfo_::MergeFrom(from.shapeupdateinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_stringdata()) {
      set_has_stringdata();
      stringdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stringdata_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_robotvelocity()) {
    if (!this->robotvelocity_->IsInitialized()) return false;
  }
  if (has_identificationresponse()) {
    if (!this->identificationresponse_->IsInitialized()) return false;
  }
  if (has_error()) {
    if (!this->error_->IsInitialized()) return false;
  }
  if (has_custommessage()) {
    if (!this->custommessage_->IsInitialized()) return false;
  }
  if (has_shapeupdateinfo()) {
    if (!this->shapeupdateinfo_->IsInitialized()) return false;
  }
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  std::swap(id_, other->id_);
  std::swap(messagetarget_, other->messagetarget_);
  std::swap(messagetype_, other->messagetype_);
  std::swap(robotvelocity_, other->robotvelocity_);
  std::swap(identificationresponse_, other->identificationresponse_);
  std::swap(error_, other->error_);
  std::swap(custommessage_, other->custommessage_);
  std::swap(shapeupdateinfo_, other->shapeupdateinfo_);
  stringdata_.Swap(&other->stringdata_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// required int32 id = 1;
bool Message::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Message::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Message::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Message::clear_id() {
  id_ = 0;
  clear_has_id();
}
::google::protobuf::int32 Message::id() const {
  // @@protoc_insertion_point(field_get:Communication.Message.id)
  return id_;
}
void Message::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Communication.Message.id)
}

// required .Communication.MessageTarget_ messageTarget = 2;
bool Message::has_messagetarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Message::set_has_messagetarget() {
  _has_bits_[0] |= 0x00000002u;
}
void Message::clear_has_messagetarget() {
  _has_bits_[0] &= ~0x00000002u;
}
void Message::clear_messagetarget() {
  messagetarget_ = 0;
  clear_has_messagetarget();
}
::Communication::MessageTarget_ Message::messagetarget() const {
  // @@protoc_insertion_point(field_get:Communication.Message.messageTarget)
  return static_cast< ::Communication::MessageTarget_ >(messagetarget_);
}
void Message::set_messagetarget(::Communication::MessageTarget_ value) {
  assert(::Communication::MessageTarget__IsValid(value));
  set_has_messagetarget();
  messagetarget_ = value;
  // @@protoc_insertion_point(field_set:Communication.Message.messageTarget)
}

// required .Communication.MessageType_ messageType = 3;
bool Message::has_messagetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Message::set_has_messagetype() {
  _has_bits_[0] |= 0x00000004u;
}
void Message::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000004u;
}
void Message::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
::Communication::MessageType_ Message::messagetype() const {
  // @@protoc_insertion_point(field_get:Communication.Message.messageType)
  return static_cast< ::Communication::MessageType_ >(messagetype_);
}
void Message::set_messagetype(::Communication::MessageType_ value) {
  assert(::Communication::MessageType__IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:Communication.Message.messageType)
}

// optional .Communication.Messages.SetVelocity_ robotVelocity = 4;
bool Message::has_robotvelocity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Message::set_has_robotvelocity() {
  _has_bits_[0] |= 0x00000008u;
}
void Message::clear_has_robotvelocity() {
  _has_bits_[0] &= ~0x00000008u;
}
void Message::clear_robotvelocity() {
  if (robotvelocity_ != NULL) robotvelocity_->::Communication::Messages::SetVelocity_::Clear();
  clear_has_robotvelocity();
}
const ::Communication::Messages::SetVelocity_& Message::robotvelocity() const {
  // @@protoc_insertion_point(field_get:Communication.Message.robotVelocity)
  return robotvelocity_ != NULL ? *robotvelocity_
                         : *::Communication::Messages::SetVelocity_::internal_default_instance();
}
::Communication::Messages::SetVelocity_* Message::mutable_robotvelocity() {
  set_has_robotvelocity();
  if (robotvelocity_ == NULL) {
    robotvelocity_ = new ::Communication::Messages::SetVelocity_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.robotVelocity)
  return robotvelocity_;
}
::Communication::Messages::SetVelocity_* Message::release_robotvelocity() {
  // @@protoc_insertion_point(field_release:Communication.Message.robotVelocity)
  clear_has_robotvelocity();
  ::Communication::Messages::SetVelocity_* temp = robotvelocity_;
  robotvelocity_ = NULL;
  return temp;
}
void Message::set_allocated_robotvelocity(::Communication::Messages::SetVelocity_* robotvelocity) {
  delete robotvelocity_;
  robotvelocity_ = robotvelocity;
  if (robotvelocity) {
    set_has_robotvelocity();
  } else {
    clear_has_robotvelocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.robotVelocity)
}

// optional .Communication.Messages.IdentificationResponse_ identificationResponse = 5;
bool Message::has_identificationresponse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Message::set_has_identificationresponse() {
  _has_bits_[0] |= 0x00000010u;
}
void Message::clear_has_identificationresponse() {
  _has_bits_[0] &= ~0x00000010u;
}
void Message::clear_identificationresponse() {
  if (identificationresponse_ != NULL) identificationresponse_->::Communication::Messages::IdentificationResponse_::Clear();
  clear_has_identificationresponse();
}
const ::Communication::Messages::IdentificationResponse_& Message::identificationresponse() const {
  // @@protoc_insertion_point(field_get:Communication.Message.identificationResponse)
  return identificationresponse_ != NULL ? *identificationresponse_
                         : *::Communication::Messages::IdentificationResponse_::internal_default_instance();
}
::Communication::Messages::IdentificationResponse_* Message::mutable_identificationresponse() {
  set_has_identificationresponse();
  if (identificationresponse_ == NULL) {
    identificationresponse_ = new ::Communication::Messages::IdentificationResponse_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.identificationResponse)
  return identificationresponse_;
}
::Communication::Messages::IdentificationResponse_* Message::release_identificationresponse() {
  // @@protoc_insertion_point(field_release:Communication.Message.identificationResponse)
  clear_has_identificationresponse();
  ::Communication::Messages::IdentificationResponse_* temp = identificationresponse_;
  identificationresponse_ = NULL;
  return temp;
}
void Message::set_allocated_identificationresponse(::Communication::Messages::IdentificationResponse_* identificationresponse) {
  delete identificationresponse_;
  identificationresponse_ = identificationresponse;
  if (identificationresponse) {
    set_has_identificationresponse();
  } else {
    clear_has_identificationresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.identificationResponse)
}

// optional .Communication.Messages.Error_ error = 6;
bool Message::has_error() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Message::set_has_error() {
  _has_bits_[0] |= 0x00000020u;
}
void Message::clear_has_error() {
  _has_bits_[0] &= ~0x00000020u;
}
void Message::clear_error() {
  if (error_ != NULL) error_->::Communication::Messages::Error_::Clear();
  clear_has_error();
}
const ::Communication::Messages::Error_& Message::error() const {
  // @@protoc_insertion_point(field_get:Communication.Message.error)
  return error_ != NULL ? *error_
                         : *::Communication::Messages::Error_::internal_default_instance();
}
::Communication::Messages::Error_* Message::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::Communication::Messages::Error_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.error)
  return error_;
}
::Communication::Messages::Error_* Message::release_error() {
  // @@protoc_insertion_point(field_release:Communication.Message.error)
  clear_has_error();
  ::Communication::Messages::Error_* temp = error_;
  error_ = NULL;
  return temp;
}
void Message::set_allocated_error(::Communication::Messages::Error_* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.error)
}

// optional .Communication.Messages.CustomMessage_ customMessage = 7;
bool Message::has_custommessage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Message::set_has_custommessage() {
  _has_bits_[0] |= 0x00000040u;
}
void Message::clear_has_custommessage() {
  _has_bits_[0] &= ~0x00000040u;
}
void Message::clear_custommessage() {
  if (custommessage_ != NULL) custommessage_->::Communication::Messages::CustomMessage_::Clear();
  clear_has_custommessage();
}
const ::Communication::Messages::CustomMessage_& Message::custommessage() const {
  // @@protoc_insertion_point(field_get:Communication.Message.customMessage)
  return custommessage_ != NULL ? *custommessage_
                         : *::Communication::Messages::CustomMessage_::internal_default_instance();
}
::Communication::Messages::CustomMessage_* Message::mutable_custommessage() {
  set_has_custommessage();
  if (custommessage_ == NULL) {
    custommessage_ = new ::Communication::Messages::CustomMessage_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.customMessage)
  return custommessage_;
}
::Communication::Messages::CustomMessage_* Message::release_custommessage() {
  // @@protoc_insertion_point(field_release:Communication.Message.customMessage)
  clear_has_custommessage();
  ::Communication::Messages::CustomMessage_* temp = custommessage_;
  custommessage_ = NULL;
  return temp;
}
void Message::set_allocated_custommessage(::Communication::Messages::CustomMessage_* custommessage) {
  delete custommessage_;
  custommessage_ = custommessage;
  if (custommessage) {
    set_has_custommessage();
  } else {
    clear_has_custommessage();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.customMessage)
}

// optional .Communication.Messages.ShapeUpdateInfo_ shapeUpdateInfo = 8;
bool Message::has_shapeupdateinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Message::set_has_shapeupdateinfo() {
  _has_bits_[0] |= 0x00000080u;
}
void Message::clear_has_shapeupdateinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
void Message::clear_shapeupdateinfo() {
  if (shapeupdateinfo_ != NULL) shapeupdateinfo_->::Communication::Messages::ShapeUpdateInfo_::Clear();
  clear_has_shapeupdateinfo();
}
const ::Communication::Messages::ShapeUpdateInfo_& Message::shapeupdateinfo() const {
  // @@protoc_insertion_point(field_get:Communication.Message.shapeUpdateInfo)
  return shapeupdateinfo_ != NULL ? *shapeupdateinfo_
                         : *::Communication::Messages::ShapeUpdateInfo_::internal_default_instance();
}
::Communication::Messages::ShapeUpdateInfo_* Message::mutable_shapeupdateinfo() {
  set_has_shapeupdateinfo();
  if (shapeupdateinfo_ == NULL) {
    shapeupdateinfo_ = new ::Communication::Messages::ShapeUpdateInfo_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.shapeUpdateInfo)
  return shapeupdateinfo_;
}
::Communication::Messages::ShapeUpdateInfo_* Message::release_shapeupdateinfo() {
  // @@protoc_insertion_point(field_release:Communication.Message.shapeUpdateInfo)
  clear_has_shapeupdateinfo();
  ::Communication::Messages::ShapeUpdateInfo_* temp = shapeupdateinfo_;
  shapeupdateinfo_ = NULL;
  return temp;
}
void Message::set_allocated_shapeupdateinfo(::Communication::Messages::ShapeUpdateInfo_* shapeupdateinfo) {
  delete shapeupdateinfo_;
  shapeupdateinfo_ = shapeupdateinfo;
  if (shapeupdateinfo) {
    set_has_shapeupdateinfo();
  } else {
    clear_has_shapeupdateinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.shapeUpdateInfo)
}

// optional string stringData = 9;
bool Message::has_stringdata() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Message::set_has_stringdata() {
  _has_bits_[0] |= 0x00000100u;
}
void Message::clear_has_stringdata() {
  _has_bits_[0] &= ~0x00000100u;
}
void Message::clear_stringdata() {
  stringdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stringdata();
}
const ::std::string& Message::stringdata() const {
  // @@protoc_insertion_point(field_get:Communication.Message.stringData)
  return stringdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_stringdata(const ::std::string& value) {
  set_has_stringdata();
  stringdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Message.stringData)
}
void Message::set_stringdata(const char* value) {
  set_has_stringdata();
  stringdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Message.stringData)
}
void Message::set_stringdata(const char* value, size_t size) {
  set_has_stringdata();
  stringdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Message.stringData)
}
::std::string* Message::mutable_stringdata() {
  set_has_stringdata();
  // @@protoc_insertion_point(field_mutable:Communication.Message.stringData)
  return stringdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_stringdata() {
  // @@protoc_insertion_point(field_release:Communication.Message.stringData)
  clear_has_stringdata();
  return stringdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_stringdata(::std::string* stringdata) {
  if (stringdata != NULL) {
    set_has_stringdata();
  } else {
    clear_has_stringdata();
  }
  stringdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringdata);
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.stringData)
}

inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Communication

// @@protoc_insertion_point(global_scope)
