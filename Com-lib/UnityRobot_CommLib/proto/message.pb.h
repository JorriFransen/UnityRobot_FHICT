// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "messages.pb.h"
// @@protoc_insertion_point(includes)

namespace Communication {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Message;

enum MessageTarget_ {
  Robot = 0,
  Unity = 1,
  Vision = 2
};
bool MessageTarget__IsValid(int value);
const MessageTarget_ MessageTarget__MIN = Robot;
const MessageTarget_ MessageTarget__MAX = Vision;
const int MessageTarget__ARRAYSIZE = MessageTarget__MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageTarget__descriptor();
inline const ::std::string& MessageTarget__Name(MessageTarget_ value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageTarget__descriptor(), value);
}
inline bool MessageTarget__Parse(
    const ::std::string& name, MessageTarget_* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageTarget_>(
    MessageTarget__descriptor(), name, value);
}
enum MessageType_ {
  IdentificationRequest = 0,
  VelocityChange = 1,
  Indicate = 2,
  IdentificationResponse = 3,
  LogError = 4,
  CustomMessage = 5,
  ShapeUpdate = 6
};
bool MessageType__IsValid(int value);
const MessageType_ MessageType__MIN = IdentificationRequest;
const MessageType_ MessageType__MAX = ShapeUpdate;
const int MessageType__ARRAYSIZE = MessageType__MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType__descriptor();
inline const ::std::string& MessageType__Name(MessageType_ value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType__descriptor(), value);
}
inline bool MessageType__Parse(
    const ::std::string& name, MessageType_* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType_>(
    MessageType__descriptor(), name, value);
}
// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Communication.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required .Communication.MessageTarget_ messageTarget = 2;
  bool has_messagetarget() const;
  void clear_messagetarget();
  static const int kMessageTargetFieldNumber = 2;
  ::Communication::MessageTarget_ messagetarget() const;
  void set_messagetarget(::Communication::MessageTarget_ value);

  // required .Communication.MessageType_ messageType = 3;
  bool has_messagetype() const;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 3;
  ::Communication::MessageType_ messagetype() const;
  void set_messagetype(::Communication::MessageType_ value);

  // optional .Communication.Messages.SetVelocity_ robotVelocity = 4;
  bool has_robotvelocity() const;
  void clear_robotvelocity();
  static const int kRobotVelocityFieldNumber = 4;
  const ::Communication::Messages::SetVelocity_& robotvelocity() const;
  ::Communication::Messages::SetVelocity_* mutable_robotvelocity();
  ::Communication::Messages::SetVelocity_* release_robotvelocity();
  void set_allocated_robotvelocity(::Communication::Messages::SetVelocity_* robotvelocity);

  // optional .Communication.Messages.IdentificationResponse_ identificationResponse = 5;
  bool has_identificationresponse() const;
  void clear_identificationresponse();
  static const int kIdentificationResponseFieldNumber = 5;
  const ::Communication::Messages::IdentificationResponse_& identificationresponse() const;
  ::Communication::Messages::IdentificationResponse_* mutable_identificationresponse();
  ::Communication::Messages::IdentificationResponse_* release_identificationresponse();
  void set_allocated_identificationresponse(::Communication::Messages::IdentificationResponse_* identificationresponse);

  // optional .Communication.Messages.Error_ error = 6;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  const ::Communication::Messages::Error_& error() const;
  ::Communication::Messages::Error_* mutable_error();
  ::Communication::Messages::Error_* release_error();
  void set_allocated_error(::Communication::Messages::Error_* error);

  // optional .Communication.Messages.CustomMessage_ customMessage = 7;
  bool has_custommessage() const;
  void clear_custommessage();
  static const int kCustomMessageFieldNumber = 7;
  const ::Communication::Messages::CustomMessage_& custommessage() const;
  ::Communication::Messages::CustomMessage_* mutable_custommessage();
  ::Communication::Messages::CustomMessage_* release_custommessage();
  void set_allocated_custommessage(::Communication::Messages::CustomMessage_* custommessage);

  // optional .Communication.Messages.ShapeUpdateInfo_ shapeUpdateInfo = 8;
  bool has_shapeupdateinfo() const;
  void clear_shapeupdateinfo();
  static const int kShapeUpdateInfoFieldNumber = 8;
  const ::Communication::Messages::ShapeUpdateInfo_& shapeupdateinfo() const;
  ::Communication::Messages::ShapeUpdateInfo_* mutable_shapeupdateinfo();
  ::Communication::Messages::ShapeUpdateInfo_* release_shapeupdateinfo();
  void set_allocated_shapeupdateinfo(::Communication::Messages::ShapeUpdateInfo_* shapeupdateinfo);

  // optional string stringData = 9;
  bool has_stringdata() const;
  void clear_stringdata();
  static const int kStringDataFieldNumber = 9;
  const ::std::string& stringdata() const;
  void set_stringdata(const ::std::string& value);
  void set_stringdata(const char* value);
  void set_stringdata(const char* value, size_t size);
  ::std::string* mutable_stringdata();
  ::std::string* release_stringdata();
  void set_allocated_stringdata(::std::string* stringdata);

  // @@protoc_insertion_point(class_scope:Communication.Message)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_messagetarget();
  inline void clear_has_messagetarget();
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_robotvelocity();
  inline void clear_has_robotvelocity();
  inline void set_has_identificationresponse();
  inline void clear_has_identificationresponse();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_custommessage();
  inline void clear_has_custommessage();
  inline void set_has_shapeupdateinfo();
  inline void clear_has_shapeupdateinfo();
  inline void set_has_stringdata();
  inline void clear_has_stringdata();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  int messagetarget_;
  ::Communication::Messages::SetVelocity_* robotvelocity_;
  ::Communication::Messages::IdentificationResponse_* identificationresponse_;
  ::Communication::Messages::Error_* error_;
  ::Communication::Messages::CustomMessage_* custommessage_;
  ::Communication::Messages::ShapeUpdateInfo_* shapeupdateinfo_;
  ::google::protobuf::internal::ArenaStringPtr stringdata_;
  int messagetype_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// required int32 id = 1;
inline bool Message::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Message::id() const {
  // @@protoc_insertion_point(field_get:Communication.Message.id)
  return id_;
}
inline void Message::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Communication.Message.id)
}

// required .Communication.MessageTarget_ messageTarget = 2;
inline bool Message::has_messagetarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_messagetarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_messagetarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_messagetarget() {
  messagetarget_ = 0;
  clear_has_messagetarget();
}
inline ::Communication::MessageTarget_ Message::messagetarget() const {
  // @@protoc_insertion_point(field_get:Communication.Message.messageTarget)
  return static_cast< ::Communication::MessageTarget_ >(messagetarget_);
}
inline void Message::set_messagetarget(::Communication::MessageTarget_ value) {
  assert(::Communication::MessageTarget__IsValid(value));
  set_has_messagetarget();
  messagetarget_ = value;
  // @@protoc_insertion_point(field_set:Communication.Message.messageTarget)
}

// required .Communication.MessageType_ messageType = 3;
inline bool Message::has_messagetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_messagetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
inline ::Communication::MessageType_ Message::messagetype() const {
  // @@protoc_insertion_point(field_get:Communication.Message.messageType)
  return static_cast< ::Communication::MessageType_ >(messagetype_);
}
inline void Message::set_messagetype(::Communication::MessageType_ value) {
  assert(::Communication::MessageType__IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:Communication.Message.messageType)
}

// optional .Communication.Messages.SetVelocity_ robotVelocity = 4;
inline bool Message::has_robotvelocity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_robotvelocity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_robotvelocity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_robotvelocity() {
  if (robotvelocity_ != NULL) robotvelocity_->::Communication::Messages::SetVelocity_::Clear();
  clear_has_robotvelocity();
}
inline const ::Communication::Messages::SetVelocity_& Message::robotvelocity() const {
  // @@protoc_insertion_point(field_get:Communication.Message.robotVelocity)
  return robotvelocity_ != NULL ? *robotvelocity_ : *default_instance_->robotvelocity_;
}
inline ::Communication::Messages::SetVelocity_* Message::mutable_robotvelocity() {
  set_has_robotvelocity();
  if (robotvelocity_ == NULL) {
    robotvelocity_ = new ::Communication::Messages::SetVelocity_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.robotVelocity)
  return robotvelocity_;
}
inline ::Communication::Messages::SetVelocity_* Message::release_robotvelocity() {
  // @@protoc_insertion_point(field_release:Communication.Message.robotVelocity)
  clear_has_robotvelocity();
  ::Communication::Messages::SetVelocity_* temp = robotvelocity_;
  robotvelocity_ = NULL;
  return temp;
}
inline void Message::set_allocated_robotvelocity(::Communication::Messages::SetVelocity_* robotvelocity) {
  delete robotvelocity_;
  robotvelocity_ = robotvelocity;
  if (robotvelocity) {
    set_has_robotvelocity();
  } else {
    clear_has_robotvelocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.robotVelocity)
}

// optional .Communication.Messages.IdentificationResponse_ identificationResponse = 5;
inline bool Message::has_identificationresponse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_identificationresponse() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_identificationresponse() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_identificationresponse() {
  if (identificationresponse_ != NULL) identificationresponse_->::Communication::Messages::IdentificationResponse_::Clear();
  clear_has_identificationresponse();
}
inline const ::Communication::Messages::IdentificationResponse_& Message::identificationresponse() const {
  // @@protoc_insertion_point(field_get:Communication.Message.identificationResponse)
  return identificationresponse_ != NULL ? *identificationresponse_ : *default_instance_->identificationresponse_;
}
inline ::Communication::Messages::IdentificationResponse_* Message::mutable_identificationresponse() {
  set_has_identificationresponse();
  if (identificationresponse_ == NULL) {
    identificationresponse_ = new ::Communication::Messages::IdentificationResponse_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.identificationResponse)
  return identificationresponse_;
}
inline ::Communication::Messages::IdentificationResponse_* Message::release_identificationresponse() {
  // @@protoc_insertion_point(field_release:Communication.Message.identificationResponse)
  clear_has_identificationresponse();
  ::Communication::Messages::IdentificationResponse_* temp = identificationresponse_;
  identificationresponse_ = NULL;
  return temp;
}
inline void Message::set_allocated_identificationresponse(::Communication::Messages::IdentificationResponse_* identificationresponse) {
  delete identificationresponse_;
  identificationresponse_ = identificationresponse;
  if (identificationresponse) {
    set_has_identificationresponse();
  } else {
    clear_has_identificationresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.identificationResponse)
}

// optional .Communication.Messages.Error_ error = 6;
inline bool Message::has_error() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_error() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_error() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_error() {
  if (error_ != NULL) error_->::Communication::Messages::Error_::Clear();
  clear_has_error();
}
inline const ::Communication::Messages::Error_& Message::error() const {
  // @@protoc_insertion_point(field_get:Communication.Message.error)
  return error_ != NULL ? *error_ : *default_instance_->error_;
}
inline ::Communication::Messages::Error_* Message::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::Communication::Messages::Error_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.error)
  return error_;
}
inline ::Communication::Messages::Error_* Message::release_error() {
  // @@protoc_insertion_point(field_release:Communication.Message.error)
  clear_has_error();
  ::Communication::Messages::Error_* temp = error_;
  error_ = NULL;
  return temp;
}
inline void Message::set_allocated_error(::Communication::Messages::Error_* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.error)
}

// optional .Communication.Messages.CustomMessage_ customMessage = 7;
inline bool Message::has_custommessage() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Message::set_has_custommessage() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Message::clear_has_custommessage() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Message::clear_custommessage() {
  if (custommessage_ != NULL) custommessage_->::Communication::Messages::CustomMessage_::Clear();
  clear_has_custommessage();
}
inline const ::Communication::Messages::CustomMessage_& Message::custommessage() const {
  // @@protoc_insertion_point(field_get:Communication.Message.customMessage)
  return custommessage_ != NULL ? *custommessage_ : *default_instance_->custommessage_;
}
inline ::Communication::Messages::CustomMessage_* Message::mutable_custommessage() {
  set_has_custommessage();
  if (custommessage_ == NULL) {
    custommessage_ = new ::Communication::Messages::CustomMessage_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.customMessage)
  return custommessage_;
}
inline ::Communication::Messages::CustomMessage_* Message::release_custommessage() {
  // @@protoc_insertion_point(field_release:Communication.Message.customMessage)
  clear_has_custommessage();
  ::Communication::Messages::CustomMessage_* temp = custommessage_;
  custommessage_ = NULL;
  return temp;
}
inline void Message::set_allocated_custommessage(::Communication::Messages::CustomMessage_* custommessage) {
  delete custommessage_;
  custommessage_ = custommessage;
  if (custommessage) {
    set_has_custommessage();
  } else {
    clear_has_custommessage();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.customMessage)
}

// optional .Communication.Messages.ShapeUpdateInfo_ shapeUpdateInfo = 8;
inline bool Message::has_shapeupdateinfo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Message::set_has_shapeupdateinfo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Message::clear_has_shapeupdateinfo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Message::clear_shapeupdateinfo() {
  if (shapeupdateinfo_ != NULL) shapeupdateinfo_->::Communication::Messages::ShapeUpdateInfo_::Clear();
  clear_has_shapeupdateinfo();
}
inline const ::Communication::Messages::ShapeUpdateInfo_& Message::shapeupdateinfo() const {
  // @@protoc_insertion_point(field_get:Communication.Message.shapeUpdateInfo)
  return shapeupdateinfo_ != NULL ? *shapeupdateinfo_ : *default_instance_->shapeupdateinfo_;
}
inline ::Communication::Messages::ShapeUpdateInfo_* Message::mutable_shapeupdateinfo() {
  set_has_shapeupdateinfo();
  if (shapeupdateinfo_ == NULL) {
    shapeupdateinfo_ = new ::Communication::Messages::ShapeUpdateInfo_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Message.shapeUpdateInfo)
  return shapeupdateinfo_;
}
inline ::Communication::Messages::ShapeUpdateInfo_* Message::release_shapeupdateinfo() {
  // @@protoc_insertion_point(field_release:Communication.Message.shapeUpdateInfo)
  clear_has_shapeupdateinfo();
  ::Communication::Messages::ShapeUpdateInfo_* temp = shapeupdateinfo_;
  shapeupdateinfo_ = NULL;
  return temp;
}
inline void Message::set_allocated_shapeupdateinfo(::Communication::Messages::ShapeUpdateInfo_* shapeupdateinfo) {
  delete shapeupdateinfo_;
  shapeupdateinfo_ = shapeupdateinfo;
  if (shapeupdateinfo) {
    set_has_shapeupdateinfo();
  } else {
    clear_has_shapeupdateinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.shapeUpdateInfo)
}

// optional string stringData = 9;
inline bool Message::has_stringdata() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Message::set_has_stringdata() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Message::clear_has_stringdata() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Message::clear_stringdata() {
  stringdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stringdata();
}
inline const ::std::string& Message::stringdata() const {
  // @@protoc_insertion_point(field_get:Communication.Message.stringData)
  return stringdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_stringdata(const ::std::string& value) {
  set_has_stringdata();
  stringdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Message.stringData)
}
inline void Message::set_stringdata(const char* value) {
  set_has_stringdata();
  stringdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Message.stringData)
}
inline void Message::set_stringdata(const char* value, size_t size) {
  set_has_stringdata();
  stringdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Message.stringData)
}
inline ::std::string* Message::mutable_stringdata() {
  set_has_stringdata();
  // @@protoc_insertion_point(field_mutable:Communication.Message.stringData)
  return stringdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_stringdata() {
  // @@protoc_insertion_point(field_release:Communication.Message.stringData)
  clear_has_stringdata();
  return stringdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_stringdata(::std::string* stringdata) {
  if (stringdata != NULL) {
    set_has_stringdata();
  } else {
    clear_has_stringdata();
  }
  stringdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stringdata);
  // @@protoc_insertion_point(field_set_allocated:Communication.Message.stringData)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Communication

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Communication::MessageTarget_> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Communication::MessageTarget_>() {
  return ::Communication::MessageTarget__descriptor();
}
template <> struct is_proto_enum< ::Communication::MessageType_> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Communication::MessageType_>() {
  return ::Communication::MessageType__descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
