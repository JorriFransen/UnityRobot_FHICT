// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Communication {
namespace Messages {

namespace {

const ::google::protobuf::Descriptor* SetVelocity__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetVelocity__reflection_ = NULL;
const ::google::protobuf::Descriptor* IdentificationResponse__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IdentificationResponse__reflection_ = NULL;
const ::google::protobuf::Descriptor* Error__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error__reflection_ = NULL;
const ::google::protobuf::Descriptor* CustomMessage__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CustomMessage__reflection_ = NULL;
const ::google::protobuf::Descriptor* ShapeUpdateInfo__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShapeUpdateInfo__reflection_ = NULL;
const ::google::protobuf::Descriptor* Shape__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Shape__reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messages_2eproto() {
  protobuf_AddDesc_messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages.proto");
  GOOGLE_CHECK(file != NULL);
  SetVelocity__descriptor_ = file->message_type(0);
  static const int SetVelocity__offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVelocity_, linearvelocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVelocity_, angularvelocity_),
  };
  SetVelocity__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetVelocity__descriptor_,
      SetVelocity_::default_instance_,
      SetVelocity__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVelocity_, _has_bits_[0]),
      -1,
      -1,
      sizeof(SetVelocity_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetVelocity_, _internal_metadata_),
      -1);
  IdentificationResponse__descriptor_ = file->message_type(1);
  static const int IdentificationResponse__offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationResponse_, robottype_),
  };
  IdentificationResponse__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IdentificationResponse__descriptor_,
      IdentificationResponse_::default_instance_,
      IdentificationResponse__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationResponse_, _has_bits_[0]),
      -1,
      -1,
      sizeof(IdentificationResponse_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IdentificationResponse_, _internal_metadata_),
      -1);
  Error__descriptor_ = file->message_type(2);
  static const int Error__offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error_, message_),
  };
  Error__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Error__descriptor_,
      Error_::default_instance_,
      Error__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error_, _has_bits_[0]),
      -1,
      -1,
      sizeof(Error_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error_, _internal_metadata_),
      -1);
  CustomMessage__descriptor_ = file->message_type(3);
  static const int CustomMessage__offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage_, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage_, data_),
  };
  CustomMessage__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CustomMessage__descriptor_,
      CustomMessage_::default_instance_,
      CustomMessage__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage_, _has_bits_[0]),
      -1,
      -1,
      sizeof(CustomMessage_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomMessage_, _internal_metadata_),
      -1);
  ShapeUpdateInfo__descriptor_ = file->message_type(4);
  static const int ShapeUpdateInfo__offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo_, changedshapes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo_, newshapes_),
  };
  ShapeUpdateInfo__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShapeUpdateInfo__descriptor_,
      ShapeUpdateInfo_::default_instance_,
      ShapeUpdateInfo__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo_, _has_bits_[0]),
      -1,
      -1,
      sizeof(ShapeUpdateInfo_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShapeUpdateInfo_, _internal_metadata_),
      -1);
  Shape__descriptor_ = file->message_type(5);
  static const int Shape__offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape_, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape_, vertices_),
  };
  Shape__reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Shape__descriptor_,
      Shape_::default_instance_,
      Shape__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape_, _has_bits_[0]),
      -1,
      -1,
      sizeof(Shape_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shape_, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetVelocity__descriptor_, &SetVelocity_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IdentificationResponse__descriptor_, &IdentificationResponse_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Error__descriptor_, &Error_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CustomMessage__descriptor_, &CustomMessage_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShapeUpdateInfo__descriptor_, &ShapeUpdateInfo_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Shape__descriptor_, &Shape_::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_2eproto() {
  delete SetVelocity_::default_instance_;
  delete SetVelocity__reflection_;
  delete IdentificationResponse_::default_instance_;
  delete IdentificationResponse__reflection_;
  delete Error_::default_instance_;
  delete Error__reflection_;
  delete CustomMessage_::default_instance_;
  delete CustomMessage__reflection_;
  delete ShapeUpdateInfo_::default_instance_;
  delete ShapeUpdateInfo__reflection_;
  delete Shape_::default_instance_;
  delete Shape__reflection_;
}

void protobuf_AddDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Communication::Transform::protobuf_AddDesc_transform_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016messages.proto\022\026Communication.Messages"
    "\032\017transform.proto\"\205\001\n\014SetVelocity_\0229\n\016li"
    "nearVelocity\030\001 \001(\0132!.Communication.Trans"
    "form.Vector3_\022:\n\017angularVelocity\030\002 \001(\0132!"
    ".Communication.Transform.Vector3_\",\n\027Ide"
    "ntificationResponse_\022\021\n\trobotType\030\001 \002(\t\""
    "\031\n\006Error_\022\017\n\007message\030\001 \002(\t\"+\n\016CustomMess"
    "age_\022\013\n\003key\030\001 \002(\t\022\014\n\004data\030\002 \001(\t\"|\n\020Shape"
    "UpdateInfo_\0225\n\rchangedShapes\030\001 \003(\0132\036.Com"
    "munication.Messages.Shape_\0221\n\tnewShapes\030"
    "\002 \003(\0132\036.Communication.Messages.Shape_\"I\n"
    "\006Shape_\022\n\n\002id\030\001 \002(\005\0223\n\010vertices\030\002 \003(\0132!."
    "Communication.Transform.Vector3_", 512);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  SetVelocity_::default_instance_ = new SetVelocity_();
  IdentificationResponse_::default_instance_ = new IdentificationResponse_();
  Error_::default_instance_ = new Error_();
  CustomMessage_::default_instance_ = new CustomMessage_();
  ShapeUpdateInfo_::default_instance_ = new ShapeUpdateInfo_();
  Shape_::default_instance_ = new Shape_();
  SetVelocity_::default_instance_->InitAsDefaultInstance();
  IdentificationResponse_::default_instance_->InitAsDefaultInstance();
  Error_::default_instance_->InitAsDefaultInstance();
  CustomMessage_::default_instance_->InitAsDefaultInstance();
  ShapeUpdateInfo_::default_instance_->InitAsDefaultInstance();
  Shape_::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetVelocity_::kLinearVelocityFieldNumber;
const int SetVelocity_::kAngularVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetVelocity_::SetVelocity_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.SetVelocity_)
}

void SetVelocity_::InitAsDefaultInstance() {
  linearvelocity_ = const_cast< ::Communication::Transform::Vector3_*>(&::Communication::Transform::Vector3_::default_instance());
  angularvelocity_ = const_cast< ::Communication::Transform::Vector3_*>(&::Communication::Transform::Vector3_::default_instance());
}

SetVelocity_::SetVelocity_(const SetVelocity_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.SetVelocity_)
}

void SetVelocity_::SharedCtor() {
  _cached_size_ = 0;
  linearvelocity_ = NULL;
  angularvelocity_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetVelocity_::~SetVelocity_() {
  // @@protoc_insertion_point(destructor:Communication.Messages.SetVelocity_)
  SharedDtor();
}

void SetVelocity_::SharedDtor() {
  if (this != default_instance_) {
    delete linearvelocity_;
    delete angularvelocity_;
  }
}

void SetVelocity_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetVelocity_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetVelocity__descriptor_;
}

const SetVelocity_& SetVelocity_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

SetVelocity_* SetVelocity_::default_instance_ = NULL;

SetVelocity_* SetVelocity_::New(::google::protobuf::Arena* arena) const {
  SetVelocity_* n = new SetVelocity_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetVelocity_::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.SetVelocity_)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_linearvelocity()) {
      if (linearvelocity_ != NULL) linearvelocity_->::Communication::Transform::Vector3_::Clear();
    }
    if (has_angularvelocity()) {
      if (angularvelocity_ != NULL) angularvelocity_->::Communication::Transform::Vector3_::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SetVelocity_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.SetVelocity_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Communication.Transform.Vector3_ linearVelocity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_linearvelocity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_angularVelocity;
        break;
      }

      // optional .Communication.Transform.Vector3_ angularVelocity = 2;
      case 2: {
        if (tag == 18) {
         parse_angularVelocity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_angularvelocity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.SetVelocity_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.SetVelocity_)
  return false;
#undef DO_
}

void SetVelocity_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.SetVelocity_)
  // optional .Communication.Transform.Vector3_ linearVelocity = 1;
  if (has_linearvelocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->linearvelocity_, output);
  }

  // optional .Communication.Transform.Vector3_ angularVelocity = 2;
  if (has_angularvelocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->angularvelocity_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.SetVelocity_)
}

::google::protobuf::uint8* SetVelocity_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.SetVelocity_)
  // optional .Communication.Transform.Vector3_ linearVelocity = 1;
  if (has_linearvelocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->linearvelocity_, false, target);
  }

  // optional .Communication.Transform.Vector3_ angularVelocity = 2;
  if (has_angularvelocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->angularvelocity_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.SetVelocity_)
  return target;
}

int SetVelocity_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.SetVelocity_)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .Communication.Transform.Vector3_ linearVelocity = 1;
    if (has_linearvelocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->linearvelocity_);
    }

    // optional .Communication.Transform.Vector3_ angularVelocity = 2;
    if (has_angularvelocity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->angularvelocity_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetVelocity_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.SetVelocity_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetVelocity_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetVelocity_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.SetVelocity_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.SetVelocity_)
    MergeFrom(*source);
  }
}

void SetVelocity_::MergeFrom(const SetVelocity_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.SetVelocity_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_linearvelocity()) {
      mutable_linearvelocity()->::Communication::Transform::Vector3_::MergeFrom(from.linearvelocity());
    }
    if (from.has_angularvelocity()) {
      mutable_angularvelocity()->::Communication::Transform::Vector3_::MergeFrom(from.angularvelocity());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SetVelocity_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.SetVelocity_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetVelocity_::CopyFrom(const SetVelocity_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.SetVelocity_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetVelocity_::IsInitialized() const {

  if (has_linearvelocity()) {
    if (!this->linearvelocity_->IsInitialized()) return false;
  }
  if (has_angularvelocity()) {
    if (!this->angularvelocity_->IsInitialized()) return false;
  }
  return true;
}

void SetVelocity_::Swap(SetVelocity_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetVelocity_::InternalSwap(SetVelocity_* other) {
  std::swap(linearvelocity_, other->linearvelocity_);
  std::swap(angularvelocity_, other->angularvelocity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetVelocity_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetVelocity__descriptor_;
  metadata.reflection = SetVelocity__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetVelocity_

// optional .Communication.Transform.Vector3_ linearVelocity = 1;
bool SetVelocity_::has_linearvelocity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetVelocity_::set_has_linearvelocity() {
  _has_bits_[0] |= 0x00000001u;
}
void SetVelocity_::clear_has_linearvelocity() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetVelocity_::clear_linearvelocity() {
  if (linearvelocity_ != NULL) linearvelocity_->::Communication::Transform::Vector3_::Clear();
  clear_has_linearvelocity();
}
const ::Communication::Transform::Vector3_& SetVelocity_::linearvelocity() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.SetVelocity_.linearVelocity)
  return linearvelocity_ != NULL ? *linearvelocity_ : *default_instance_->linearvelocity_;
}
::Communication::Transform::Vector3_* SetVelocity_::mutable_linearvelocity() {
  set_has_linearvelocity();
  if (linearvelocity_ == NULL) {
    linearvelocity_ = new ::Communication::Transform::Vector3_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Messages.SetVelocity_.linearVelocity)
  return linearvelocity_;
}
::Communication::Transform::Vector3_* SetVelocity_::release_linearvelocity() {
  // @@protoc_insertion_point(field_release:Communication.Messages.SetVelocity_.linearVelocity)
  clear_has_linearvelocity();
  ::Communication::Transform::Vector3_* temp = linearvelocity_;
  linearvelocity_ = NULL;
  return temp;
}
void SetVelocity_::set_allocated_linearvelocity(::Communication::Transform::Vector3_* linearvelocity) {
  delete linearvelocity_;
  linearvelocity_ = linearvelocity;
  if (linearvelocity) {
    set_has_linearvelocity();
  } else {
    clear_has_linearvelocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.SetVelocity_.linearVelocity)
}

// optional .Communication.Transform.Vector3_ angularVelocity = 2;
bool SetVelocity_::has_angularvelocity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetVelocity_::set_has_angularvelocity() {
  _has_bits_[0] |= 0x00000002u;
}
void SetVelocity_::clear_has_angularvelocity() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetVelocity_::clear_angularvelocity() {
  if (angularvelocity_ != NULL) angularvelocity_->::Communication::Transform::Vector3_::Clear();
  clear_has_angularvelocity();
}
const ::Communication::Transform::Vector3_& SetVelocity_::angularvelocity() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.SetVelocity_.angularVelocity)
  return angularvelocity_ != NULL ? *angularvelocity_ : *default_instance_->angularvelocity_;
}
::Communication::Transform::Vector3_* SetVelocity_::mutable_angularvelocity() {
  set_has_angularvelocity();
  if (angularvelocity_ == NULL) {
    angularvelocity_ = new ::Communication::Transform::Vector3_;
  }
  // @@protoc_insertion_point(field_mutable:Communication.Messages.SetVelocity_.angularVelocity)
  return angularvelocity_;
}
::Communication::Transform::Vector3_* SetVelocity_::release_angularvelocity() {
  // @@protoc_insertion_point(field_release:Communication.Messages.SetVelocity_.angularVelocity)
  clear_has_angularvelocity();
  ::Communication::Transform::Vector3_* temp = angularvelocity_;
  angularvelocity_ = NULL;
  return temp;
}
void SetVelocity_::set_allocated_angularvelocity(::Communication::Transform::Vector3_* angularvelocity) {
  delete angularvelocity_;
  angularvelocity_ = angularvelocity;
  if (angularvelocity) {
    set_has_angularvelocity();
  } else {
    clear_has_angularvelocity();
  }
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.SetVelocity_.angularVelocity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentificationResponse_::kRobotTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentificationResponse_::IdentificationResponse_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.IdentificationResponse_)
}

void IdentificationResponse_::InitAsDefaultInstance() {
}

IdentificationResponse_::IdentificationResponse_(const IdentificationResponse_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.IdentificationResponse_)
}

void IdentificationResponse_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  robottype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IdentificationResponse_::~IdentificationResponse_() {
  // @@protoc_insertion_point(destructor:Communication.Messages.IdentificationResponse_)
  SharedDtor();
}

void IdentificationResponse_::SharedDtor() {
  robottype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void IdentificationResponse_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdentificationResponse_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IdentificationResponse__descriptor_;
}

const IdentificationResponse_& IdentificationResponse_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

IdentificationResponse_* IdentificationResponse_::default_instance_ = NULL;

IdentificationResponse_* IdentificationResponse_::New(::google::protobuf::Arena* arena) const {
  IdentificationResponse_* n = new IdentificationResponse_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdentificationResponse_::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.IdentificationResponse_)
  if (has_robottype()) {
    robottype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool IdentificationResponse_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.IdentificationResponse_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string robotType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robottype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->robottype().data(), this->robottype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.IdentificationResponse_.robotType");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.IdentificationResponse_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.IdentificationResponse_)
  return false;
#undef DO_
}

void IdentificationResponse_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.IdentificationResponse_)
  // required string robotType = 1;
  if (has_robottype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robottype().data(), this->robottype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.IdentificationResponse_.robotType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->robottype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.IdentificationResponse_)
}

::google::protobuf::uint8* IdentificationResponse_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.IdentificationResponse_)
  // required string robotType = 1;
  if (has_robottype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robottype().data(), this->robottype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.IdentificationResponse_.robotType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->robottype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.IdentificationResponse_)
  return target;
}

int IdentificationResponse_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.IdentificationResponse_)
  int total_size = 0;

  // required string robotType = 1;
  if (has_robottype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robottype());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdentificationResponse_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.IdentificationResponse_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IdentificationResponse_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentificationResponse_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.IdentificationResponse_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.IdentificationResponse_)
    MergeFrom(*source);
  }
}

void IdentificationResponse_::MergeFrom(const IdentificationResponse_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.IdentificationResponse_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_robottype()) {
      set_has_robottype();
      robottype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robottype_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void IdentificationResponse_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.IdentificationResponse_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentificationResponse_::CopyFrom(const IdentificationResponse_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.IdentificationResponse_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentificationResponse_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void IdentificationResponse_::Swap(IdentificationResponse_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentificationResponse_::InternalSwap(IdentificationResponse_* other) {
  robottype_.Swap(&other->robottype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdentificationResponse_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IdentificationResponse__descriptor_;
  metadata.reflection = IdentificationResponse__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IdentificationResponse_

// required string robotType = 1;
bool IdentificationResponse_::has_robottype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IdentificationResponse_::set_has_robottype() {
  _has_bits_[0] |= 0x00000001u;
}
void IdentificationResponse_::clear_has_robottype() {
  _has_bits_[0] &= ~0x00000001u;
}
void IdentificationResponse_::clear_robottype() {
  robottype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_robottype();
}
 const ::std::string& IdentificationResponse_::robottype() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.IdentificationResponse_.robotType)
  return robottype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IdentificationResponse_::set_robottype(const ::std::string& value) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.IdentificationResponse_.robotType)
}
 void IdentificationResponse_::set_robottype(const char* value) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.IdentificationResponse_.robotType)
}
 void IdentificationResponse_::set_robottype(const char* value, size_t size) {
  set_has_robottype();
  robottype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.IdentificationResponse_.robotType)
}
 ::std::string* IdentificationResponse_::mutable_robottype() {
  set_has_robottype();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.IdentificationResponse_.robotType)
  return robottype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IdentificationResponse_::release_robottype() {
  // @@protoc_insertion_point(field_release:Communication.Messages.IdentificationResponse_.robotType)
  clear_has_robottype();
  return robottype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IdentificationResponse_::set_allocated_robottype(::std::string* robottype) {
  if (robottype != NULL) {
    set_has_robottype();
  } else {
    clear_has_robottype();
  }
  robottype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), robottype);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.IdentificationResponse_.robotType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error_::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error_::Error_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.Error_)
}

void Error_::InitAsDefaultInstance() {
}

Error_::Error_(const Error_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.Error_)
}

void Error_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Error_::~Error_() {
  // @@protoc_insertion_point(destructor:Communication.Messages.Error_)
  SharedDtor();
}

void Error_::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Error_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error__descriptor_;
}

const Error_& Error_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Error_* Error_::default_instance_ = NULL;

Error_* Error_::New(::google::protobuf::Arena* arena) const {
  Error_* n = new Error_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error_::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.Error_)
  if (has_message()) {
    message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Error_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.Error_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.Error_.message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.Error_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.Error_)
  return false;
#undef DO_
}

void Error_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.Error_)
  // required string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.Error_.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.Error_)
}

::google::protobuf::uint8* Error_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.Error_)
  // required string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.Error_.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.Error_)
  return target;
}

int Error_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.Error_)
  int total_size = 0;

  // required string message = 1;
  if (has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.Error_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Error_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Error_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.Error_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.Error_)
    MergeFrom(*source);
  }
}

void Error_::MergeFrom(const Error_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.Error_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Error_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.Error_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error_::CopyFrom(const Error_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.Error_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Error_::Swap(Error_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error_::InternalSwap(Error_* other) {
  message_.Swap(&other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error__descriptor_;
  metadata.reflection = Error__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error_

// required string message = 1;
bool Error_::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Error_::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void Error_::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void Error_::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
 const ::std::string& Error_::message() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Error_.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error_::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.Error_.message)
}
 void Error_::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.Error_.message)
}
 void Error_::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.Error_.message)
}
 ::std::string* Error_::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.Error_.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Error_::release_message() {
  // @@protoc_insertion_point(field_release:Communication.Messages.Error_.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Error_::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.Error_.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomMessage_::kKeyFieldNumber;
const int CustomMessage_::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomMessage_::CustomMessage_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.CustomMessage_)
}

void CustomMessage_::InitAsDefaultInstance() {
}

CustomMessage_::CustomMessage_(const CustomMessage_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.CustomMessage_)
}

void CustomMessage_::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CustomMessage_::~CustomMessage_() {
  // @@protoc_insertion_point(destructor:Communication.Messages.CustomMessage_)
  SharedDtor();
}

void CustomMessage_::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CustomMessage_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomMessage_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CustomMessage__descriptor_;
}

const CustomMessage_& CustomMessage_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

CustomMessage_* CustomMessage_::default_instance_ = NULL;

CustomMessage_* CustomMessage_::New(::google::protobuf::Arena* arena) const {
  CustomMessage_* n = new CustomMessage_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomMessage_::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.CustomMessage_)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CustomMessage_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.CustomMessage_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.CustomMessage_.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional string data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Communication.Messages.CustomMessage_.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.CustomMessage_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.CustomMessage_)
  return false;
#undef DO_
}

void CustomMessage_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.CustomMessage_)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage_.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage_.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.CustomMessage_)
}

::google::protobuf::uint8* CustomMessage_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.CustomMessage_)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage_.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Communication.Messages.CustomMessage_.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.CustomMessage_)
  return target;
}

int CustomMessage_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.CustomMessage_)
  int total_size = 0;

  // required string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }
  // optional string data = 2;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomMessage_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.CustomMessage_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CustomMessage_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomMessage_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.CustomMessage_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.CustomMessage_)
    MergeFrom(*source);
  }
}

void CustomMessage_::MergeFrom(const CustomMessage_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.CustomMessage_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CustomMessage_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.CustomMessage_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomMessage_::CopyFrom(const CustomMessage_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.CustomMessage_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomMessage_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CustomMessage_::Swap(CustomMessage_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomMessage_::InternalSwap(CustomMessage_* other) {
  key_.Swap(&other->key_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomMessage_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CustomMessage__descriptor_;
  metadata.reflection = CustomMessage__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomMessage_

// required string key = 1;
bool CustomMessage_::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CustomMessage_::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CustomMessage_::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CustomMessage_::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& CustomMessage_::key() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.CustomMessage_.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage_::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.CustomMessage_.key)
}
 void CustomMessage_::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.CustomMessage_.key)
}
 void CustomMessage_::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.CustomMessage_.key)
}
 ::std::string* CustomMessage_::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.CustomMessage_.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CustomMessage_::release_key() {
  // @@protoc_insertion_point(field_release:Communication.Messages.CustomMessage_.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage_::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.CustomMessage_.key)
}

// optional string data = 2;
bool CustomMessage_::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CustomMessage_::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void CustomMessage_::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void CustomMessage_::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& CustomMessage_::data() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.CustomMessage_.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage_::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Communication.Messages.CustomMessage_.data)
}
 void CustomMessage_::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Communication.Messages.CustomMessage_.data)
}
 void CustomMessage_::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Communication.Messages.CustomMessage_.data)
}
 ::std::string* CustomMessage_::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:Communication.Messages.CustomMessage_.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CustomMessage_::release_data() {
  // @@protoc_insertion_point(field_release:Communication.Messages.CustomMessage_.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CustomMessage_::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Communication.Messages.CustomMessage_.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShapeUpdateInfo_::kChangedShapesFieldNumber;
const int ShapeUpdateInfo_::kNewShapesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShapeUpdateInfo_::ShapeUpdateInfo_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.ShapeUpdateInfo_)
}

void ShapeUpdateInfo_::InitAsDefaultInstance() {
}

ShapeUpdateInfo_::ShapeUpdateInfo_(const ShapeUpdateInfo_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.ShapeUpdateInfo_)
}

void ShapeUpdateInfo_::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShapeUpdateInfo_::~ShapeUpdateInfo_() {
  // @@protoc_insertion_point(destructor:Communication.Messages.ShapeUpdateInfo_)
  SharedDtor();
}

void ShapeUpdateInfo_::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ShapeUpdateInfo_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShapeUpdateInfo_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShapeUpdateInfo__descriptor_;
}

const ShapeUpdateInfo_& ShapeUpdateInfo_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

ShapeUpdateInfo_* ShapeUpdateInfo_::default_instance_ = NULL;

ShapeUpdateInfo_* ShapeUpdateInfo_::New(::google::protobuf::Arena* arena) const {
  ShapeUpdateInfo_* n = new ShapeUpdateInfo_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShapeUpdateInfo_::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.ShapeUpdateInfo_)
  changedshapes_.Clear();
  newshapes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ShapeUpdateInfo_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.ShapeUpdateInfo_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Communication.Messages.Shape_ changedShapes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_changedShapes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_changedshapes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_changedShapes;
        if (input->ExpectTag(18)) goto parse_loop_newShapes;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Communication.Messages.Shape_ newShapes = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_newShapes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_newshapes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_newShapes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.ShapeUpdateInfo_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.ShapeUpdateInfo_)
  return false;
#undef DO_
}

void ShapeUpdateInfo_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.ShapeUpdateInfo_)
  // repeated .Communication.Messages.Shape_ changedShapes = 1;
  for (unsigned int i = 0, n = this->changedshapes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->changedshapes(i), output);
  }

  // repeated .Communication.Messages.Shape_ newShapes = 2;
  for (unsigned int i = 0, n = this->newshapes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->newshapes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.ShapeUpdateInfo_)
}

::google::protobuf::uint8* ShapeUpdateInfo_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.ShapeUpdateInfo_)
  // repeated .Communication.Messages.Shape_ changedShapes = 1;
  for (unsigned int i = 0, n = this->changedshapes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->changedshapes(i), false, target);
  }

  // repeated .Communication.Messages.Shape_ newShapes = 2;
  for (unsigned int i = 0, n = this->newshapes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->newshapes(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.ShapeUpdateInfo_)
  return target;
}

int ShapeUpdateInfo_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.ShapeUpdateInfo_)
  int total_size = 0;

  // repeated .Communication.Messages.Shape_ changedShapes = 1;
  total_size += 1 * this->changedshapes_size();
  for (int i = 0; i < this->changedshapes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->changedshapes(i));
  }

  // repeated .Communication.Messages.Shape_ newShapes = 2;
  total_size += 1 * this->newshapes_size();
  for (int i = 0; i < this->newshapes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->newshapes(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShapeUpdateInfo_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.ShapeUpdateInfo_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ShapeUpdateInfo_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ShapeUpdateInfo_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.ShapeUpdateInfo_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.ShapeUpdateInfo_)
    MergeFrom(*source);
  }
}

void ShapeUpdateInfo_::MergeFrom(const ShapeUpdateInfo_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.ShapeUpdateInfo_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  changedshapes_.MergeFrom(from.changedshapes_);
  newshapes_.MergeFrom(from.newshapes_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ShapeUpdateInfo_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.ShapeUpdateInfo_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShapeUpdateInfo_::CopyFrom(const ShapeUpdateInfo_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.ShapeUpdateInfo_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeUpdateInfo_::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->changedshapes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->newshapes())) return false;
  return true;
}

void ShapeUpdateInfo_::Swap(ShapeUpdateInfo_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShapeUpdateInfo_::InternalSwap(ShapeUpdateInfo_* other) {
  changedshapes_.UnsafeArenaSwap(&other->changedshapes_);
  newshapes_.UnsafeArenaSwap(&other->newshapes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShapeUpdateInfo_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShapeUpdateInfo__descriptor_;
  metadata.reflection = ShapeUpdateInfo__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShapeUpdateInfo_

// repeated .Communication.Messages.Shape_ changedShapes = 1;
int ShapeUpdateInfo_::changedshapes_size() const {
  return changedshapes_.size();
}
void ShapeUpdateInfo_::clear_changedshapes() {
  changedshapes_.Clear();
}
const ::Communication::Messages::Shape_& ShapeUpdateInfo_::changedshapes(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.ShapeUpdateInfo_.changedShapes)
  return changedshapes_.Get(index);
}
::Communication::Messages::Shape_* ShapeUpdateInfo_::mutable_changedshapes(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.ShapeUpdateInfo_.changedShapes)
  return changedshapes_.Mutable(index);
}
::Communication::Messages::Shape_* ShapeUpdateInfo_::add_changedshapes() {
  // @@protoc_insertion_point(field_add:Communication.Messages.ShapeUpdateInfo_.changedShapes)
  return changedshapes_.Add();
}
::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape_ >*
ShapeUpdateInfo_::mutable_changedshapes() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.ShapeUpdateInfo_.changedShapes)
  return &changedshapes_;
}
const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape_ >&
ShapeUpdateInfo_::changedshapes() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.ShapeUpdateInfo_.changedShapes)
  return changedshapes_;
}

// repeated .Communication.Messages.Shape_ newShapes = 2;
int ShapeUpdateInfo_::newshapes_size() const {
  return newshapes_.size();
}
void ShapeUpdateInfo_::clear_newshapes() {
  newshapes_.Clear();
}
const ::Communication::Messages::Shape_& ShapeUpdateInfo_::newshapes(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.ShapeUpdateInfo_.newShapes)
  return newshapes_.Get(index);
}
::Communication::Messages::Shape_* ShapeUpdateInfo_::mutable_newshapes(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.ShapeUpdateInfo_.newShapes)
  return newshapes_.Mutable(index);
}
::Communication::Messages::Shape_* ShapeUpdateInfo_::add_newshapes() {
  // @@protoc_insertion_point(field_add:Communication.Messages.ShapeUpdateInfo_.newShapes)
  return newshapes_.Add();
}
::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape_ >*
ShapeUpdateInfo_::mutable_newshapes() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.ShapeUpdateInfo_.newShapes)
  return &newshapes_;
}
const ::google::protobuf::RepeatedPtrField< ::Communication::Messages::Shape_ >&
ShapeUpdateInfo_::newshapes() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.ShapeUpdateInfo_.newShapes)
  return newshapes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shape_::kIdFieldNumber;
const int Shape_::kVerticesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shape_::Shape_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Communication.Messages.Shape_)
}

void Shape_::InitAsDefaultInstance() {
}

Shape_::Shape_(const Shape_& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Communication.Messages.Shape_)
}

void Shape_::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Shape_::~Shape_() {
  // @@protoc_insertion_point(destructor:Communication.Messages.Shape_)
  SharedDtor();
}

void Shape_::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Shape_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shape_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Shape__descriptor_;
}

const Shape_& Shape_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Shape_* Shape_::default_instance_ = NULL;

Shape_* Shape_::New(::google::protobuf::Arena* arena) const {
  Shape_* n = new Shape_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shape_::Clear() {
// @@protoc_insertion_point(message_clear_start:Communication.Messages.Shape_)
  id_ = 0;
  vertices_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Shape_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Communication.Messages.Shape_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vertices;
        break;
      }

      // repeated .Communication.Transform.Vector3_ vertices = 2;
      case 2: {
        if (tag == 18) {
         parse_vertices:
          DO_(input->IncrementRecursionDepth());
         parse_loop_vertices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vertices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_vertices;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Communication.Messages.Shape_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Communication.Messages.Shape_)
  return false;
#undef DO_
}

void Shape_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Communication.Messages.Shape_)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated .Communication.Transform.Vector3_ vertices = 2;
  for (unsigned int i = 0, n = this->vertices_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vertices(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Communication.Messages.Shape_)
}

::google::protobuf::uint8* Shape_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Communication.Messages.Shape_)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated .Communication.Transform.Vector3_ vertices = 2;
  for (unsigned int i = 0, n = this->vertices_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->vertices(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Communication.Messages.Shape_)
  return target;
}

int Shape_::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Communication.Messages.Shape_)
  int total_size = 0;

  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  // repeated .Communication.Transform.Vector3_ vertices = 2;
  total_size += 1 * this->vertices_size();
  for (int i = 0; i < this->vertices_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vertices(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shape_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Communication.Messages.Shape_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Shape_* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Shape_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Communication.Messages.Shape_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Communication.Messages.Shape_)
    MergeFrom(*source);
  }
}

void Shape_::MergeFrom(const Shape_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Communication.Messages.Shape_)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  vertices_.MergeFrom(from.vertices_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Shape_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Communication.Messages.Shape_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shape_::CopyFrom(const Shape_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Communication.Messages.Shape_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shape_::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->vertices())) return false;
  return true;
}

void Shape_::Swap(Shape_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shape_::InternalSwap(Shape_* other) {
  std::swap(id_, other->id_);
  vertices_.UnsafeArenaSwap(&other->vertices_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shape_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Shape__descriptor_;
  metadata.reflection = Shape__reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shape_

// required int32 id = 1;
bool Shape_::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Shape_::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Shape_::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Shape_::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 Shape_::id() const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Shape_.id)
  return id_;
}
 void Shape_::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Communication.Messages.Shape_.id)
}

// repeated .Communication.Transform.Vector3_ vertices = 2;
int Shape_::vertices_size() const {
  return vertices_.size();
}
void Shape_::clear_vertices() {
  vertices_.Clear();
}
const ::Communication::Transform::Vector3_& Shape_::vertices(int index) const {
  // @@protoc_insertion_point(field_get:Communication.Messages.Shape_.vertices)
  return vertices_.Get(index);
}
::Communication::Transform::Vector3_* Shape_::mutable_vertices(int index) {
  // @@protoc_insertion_point(field_mutable:Communication.Messages.Shape_.vertices)
  return vertices_.Mutable(index);
}
::Communication::Transform::Vector3_* Shape_::add_vertices() {
  // @@protoc_insertion_point(field_add:Communication.Messages.Shape_.vertices)
  return vertices_.Add();
}
::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3_ >*
Shape_::mutable_vertices() {
  // @@protoc_insertion_point(field_mutable_list:Communication.Messages.Shape_.vertices)
  return &vertices_;
}
const ::google::protobuf::RepeatedPtrField< ::Communication::Transform::Vector3_ >&
Shape_::vertices() const {
  // @@protoc_insertion_point(field_list:Communication.Messages.Shape_.vertices)
  return vertices_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Communication

// @@protoc_insertion_point(global_scope)
